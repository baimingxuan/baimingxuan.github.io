<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>柏明轩的博客</title>
  
  <subtitle>成为一个厉害的普通人</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-09-25T09:33:45.095Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>柏明轩</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>使用pm2部署node项目</title>
    <link href="http://yoursite.com/2020/09/15/%E4%BD%BF%E7%94%A8pm2%E9%83%A8%E7%BD%B2node%E9%A1%B9%E7%9B%AE/"/>
    <id>http://yoursite.com/2020/09/15/%E4%BD%BF%E7%94%A8pm2%E9%83%A8%E7%BD%B2node%E9%A1%B9%E7%9B%AE/</id>
    <published>2020-09-15T09:20:33.000Z</published>
    <updated>2020-09-25T09:33:45.095Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1、pm2简介"><a href="#1、pm2简介" class="headerlink" title="1、pm2简介"></a>1、pm2简介</h2><p>pm2（process manager）是一个进程管理工具，维护一个进程列表，可以用它来管理你的node进程，负责所有正在运行的进程，并查看node进程的状态，也支持性能监控，负载均衡等功能。</p><h3 id="1-1、使用pm2管理的node程序的好处"><a href="#1-1、使用pm2管理的node程序的好处" class="headerlink" title="1.1、使用pm2管理的node程序的好处"></a>1.1、使用pm2管理的node程序的好处</h3><ol><li><p>监听文件变化，自动重启程序</p></li><li><p>支持性能监控</p></li><li><p>负载均衡</p></li><li><p>程序崩溃自动重启</p></li><li><p>服务器重新启动时自动重新启动</p><a id="more"></a> </li></ol><h2 id="2、pm2安装与使用"><a href="#2、pm2安装与使用" class="headerlink" title="2、pm2安装与使用"></a>2、pm2安装与使用</h2><h3 id="2-1、全局安装"><a href="#2-1、全局安装" class="headerlink" title="2.1、全局安装"></a>2.1、全局安装</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install pm2 -g</span><br></pre></td></tr></table></figure><h3 id="2-2、常用命令"><a href="#2-2、常用命令" class="headerlink" title="2.2、常用命令"></a>2.2、常用命令</h3><ul><li>启动一个node程序</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pm2 start app.js</span><br></pre></td></tr></table></figure><ul><li>启动进程并指定应用的程序名</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pm2 start app.js --name application</span><br></pre></td></tr></table></figure><ul><li>添加进程监视</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">// 在文件改变的时候会重新启动程序</span><br><span class="line">pm2 start app.js --name start --watch</span><br></pre></td></tr></table></figure><ul><li>列出所有进程</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pm2 list</span><br><span class="line">pm2 ls // 简写</span><br></pre></td></tr></table></figure><ul><li>从进程列表中删除进程</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">// pm2 delete [appname] | id</span><br><span class="line">pm2 delete app  // 指定进程名删除</span><br><span class="line">pm2 delete 0    // 指定进程id删除</span><br></pre></td></tr></table></figure><ul><li>删除进程列表中所有进程</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pm2 delete all</span><br></pre></td></tr></table></figure><ul><li>查看某个进程具体情况</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pm2 describe app</span><br></pre></td></tr></table></figure><ul><li>查看进程的资源消耗情况</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pm2 monit</span><br></pre></td></tr></table></figure><ul><li>重启进程</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">    pm2 restart app // 重启指定名称的进程</span><br><span class="line">    pm2 restart all // 重启所有进程</span><br><span class="line">复制代码</span><br></pre></td></tr></table></figure><ul><li>查看进程日志</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pm2 logs app    // 查看该名称进程的日志</span><br><span class="line">pm2 logs all    // 查看所有进程的日志</span><br></pre></td></tr></table></figure><ul><li>设置pm2开机自启</li></ul><p>开启启动设置，此处是CentOS系统，其他系统替换最后一个选项（可选项：ubuntu, centos 等）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pm2 startup centos</span><br></pre></td></tr></table></figure><p>然后按照提示需要输入的命令进行输入</p><ul><li>最后保存设置</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pm2 save</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;1、pm2简介&quot;&gt;&lt;a href=&quot;#1、pm2简介&quot; class=&quot;headerlink&quot; title=&quot;1、pm2简介&quot;&gt;&lt;/a&gt;1、pm2简介&lt;/h2&gt;&lt;p&gt;pm2（process manager）是一个进程管理工具，维护一个进程列表，可以用它来管理你的node进程，负责所有正在运行的进程，并查看node进程的状态，也支持性能监控，负载均衡等功能。&lt;/p&gt;
&lt;h3 id=&quot;1-1、使用pm2管理的node程序的好处&quot;&gt;&lt;a href=&quot;#1-1、使用pm2管理的node程序的好处&quot; class=&quot;headerlink&quot; title=&quot;1.1、使用pm2管理的node程序的好处&quot;&gt;&lt;/a&gt;1.1、使用pm2管理的node程序的好处&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;监听文件变化，自动重启程序&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;支持性能监控&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;负载均衡&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;程序崩溃自动重启&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;服务器重新启动时自动重新启动&lt;/p&gt;
    
    </summary>
    
    
      <category term="NodeJS" scheme="http://yoursite.com/categories/NodeJS/"/>
    
    
      <category term="NodeJs" scheme="http://yoursite.com/tags/NodeJs/"/>
    
  </entry>
  
  <entry>
    <title>前端性能优化：JS函数防抖与节流</title>
    <link href="http://yoursite.com/2020/06/23/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3JS%E9%98%B2%E6%8A%96%E4%B8%8E%E8%8A%82%E6%B5%81/"/>
    <id>http://yoursite.com/2020/06/23/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3JS%E9%98%B2%E6%8A%96%E4%B8%8E%E8%8A%82%E6%B5%81/</id>
    <published>2020-06-23T07:58:04.000Z</published>
    <updated>2020-09-23T08:55:14.736Z</updated>
    
    <content type="html"><![CDATA[<h2 id="函数防抖-debounce"><a href="#函数防抖-debounce" class="headerlink" title="函数防抖(debounce)"></a>函数防抖(debounce)</h2><p><strong>概念：</strong>事件被触发n秒后再执行回调，如果在这n秒内又被触发，则重新计时。</p><p><strong>使用场景：</strong></p><ul><li><p>input 搜索联想且在不断输入时，可用防抖来节约请求资源</p></li><li><p>Window触发resize、浏览器滑动scroll时，不断的触发事件，用防抖来让其只触发一次</p></li></ul><p><strong>代码实现：</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">debounce</span>(<span class="params">func, ms = <span class="number">1000</span></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> timer</span><br><span class="line">  <span class="keyword">return</span> <span class="function"><span class="keyword">function</span> (<span class="params">...args</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (timer) &#123;</span><br><span class="line">      clearTimeout(timer)</span><br><span class="line">    &#125;</span><br><span class="line">    timer = setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">      func.apply(<span class="keyword">this</span>, args)</span><br><span class="line">    &#125;, ms)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure> <a id="more"></a><h5 id="通俗的讲：函数防抖就像游戏中的蓄能技能，能量没蓄满再按键就会重新蓄能"><a href="#通俗的讲：函数防抖就像游戏中的蓄能技能，能量没蓄满再按键就会重新蓄能" class="headerlink" title="通俗的讲：函数防抖就像游戏中的蓄能技能，能量没蓄满再按键就会重新蓄能"></a>通俗的讲：函数防抖就像游戏中的蓄能技能，能量没蓄满再按键就会重新蓄能</h5><h2 id="函数节流-throttle"><a href="#函数节流-throttle" class="headerlink" title="函数节流(throttle)"></a>函数节流(throttle)</h2><p><strong>概念：</strong>规定在一个单位时间内，只能触发一次函数。如果这个单位时间内触发多次函数，只有一次生效。</p><p><strong>使用场景：</strong></p><ul><li>鼠标不断点击触发，mousedown在单位时间内只触发一次</li></ul><p><strong>代码实现：</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">throttle</span>(<span class="params">func, ms = <span class="number">1000</span></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> canRun = <span class="literal">true</span></span><br><span class="line">  <span class="keyword">return</span> <span class="function"><span class="keyword">function</span> (<span class="params">...args</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!canRun) <span class="keyword">return</span></span><br><span class="line">    canRun = <span class="literal">false</span></span><br><span class="line">    setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">      func.apply(<span class="keyword">this</span>, args)</span><br><span class="line">      canRun = <span class="literal">true</span></span><br><span class="line">    &#125;, ms)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="通俗的讲：函数节流就像游戏里的攻速，就算一直按着鼠标，也只会在规定A出动作"><a href="#通俗的讲：函数节流就像游戏里的攻速，就算一直按着鼠标，也只会在规定A出动作" class="headerlink" title="通俗的讲：函数节流就像游戏里的攻速，就算一直按着鼠标，也只会在规定A出动作"></a>通俗的讲：函数节流就像游戏里的攻速，就算一直按着鼠标，也只会在规定A出动作</h5><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ul><li>函数防抖和函数节流都是防止某一时间频繁触发，但各自的原理不一样</li><li>函数防抖是某一段时间内触发事件执行一次，再次触发则重新计时；而函数节流是触发后一段时间必定执行一次，无法被打断</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;函数防抖-debounce&quot;&gt;&lt;a href=&quot;#函数防抖-debounce&quot; class=&quot;headerlink&quot; title=&quot;函数防抖(debounce)&quot;&gt;&lt;/a&gt;函数防抖(debounce)&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;概念：&lt;/strong&gt;事件被触发n秒后再执行回调，如果在这n秒内又被触发，则重新计时。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;使用场景：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;input 搜索联想且在不断输入时，可用防抖来节约请求资源&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Window触发resize、浏览器滑动scroll时，不断的触发事件，用防抖来让其只触发一次&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;代码实现：&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;debounce&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;func, ms = &lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; timer&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;...args&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (timer) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      clearTimeout(timer)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    timer = setTimeout(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; =&amp;gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      func.apply(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;, args)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;, ms)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="JavaScript" scheme="http://yoursite.com/categories/JavaScript/"/>
    
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>理解JS中的reduce方法</title>
    <link href="http://yoursite.com/2020/05/30/%E7%90%86%E8%A7%A3JS%E4%B8%AD%E7%9A%84reduce%E6%96%B9%E6%B3%95/"/>
    <id>http://yoursite.com/2020/05/30/%E7%90%86%E8%A7%A3JS%E4%B8%AD%E7%9A%84reduce%E6%96%B9%E6%B3%95/</id>
    <published>2020-05-30T01:25:01.000Z</published>
    <updated>2020-09-25T01:52:50.942Z</updated>
    
    <content type="html"><![CDATA[<h2 id="reduce方法"><a href="#reduce方法" class="headerlink" title="reduce方法"></a>reduce方法</h2><p>reduce 方法对数组的每个元素执行提供的reducer函数，将结果汇为单个返回值。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">arr.reduce(callback(accumulator, currentValue, index, array), initialValue)</span><br></pre></td></tr></table></figure><ul><li><strong>callback</strong> 执行数组中每个值的函数，包括四个参数。</li></ul><ol><li><strong>accumulator</strong>回调<code>callback</code>方法执行后的返回值</li><li><strong>currentValue</strong>数组中正在处理的当前值</li><li><strong>index</strong>数组中正在处理的当前值的索引</li><li><strong>array</strong>调用<code>reduce</code>方法的数组</li></ol><ul><li><strong>initialValue</strong>设置的初始值（可选）</li></ul><p><strong>注意：</strong>若提供了初始值 <code>initialValue</code>，将作为第一次调用callback函数时的第一个参数 <code>accumulator</code> 的值，索引 <code>index</code>从0开始，迭代次数为 <code>arr.length</code>；若没有提供初始值<code>initialValue</code>，则把数组第一个值作为callback第一个参数的值，索引 <code>index</code>从1开始，迭代次数为 <code>arr.length - 1</code></p><a id="more"></a> <h2 id="使用场景"><a href="#使用场景" class="headerlink" title="使用场景"></a>使用场景</h2><ul><li><strong>数组累加</strong></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> sum = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">5</span>].reduce(<span class="function">(<span class="params">acc, cur</span>) =&gt;</span> &#123;</span><br><span class="line"> <span class="keyword">return</span> acc + cur</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><ul><li><strong>对象属性和</strong></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> sum = [&#123;<span class="attr">x</span>: <span class="number">1</span>&#125;, &#123;<span class="attr">x</span>: <span class="number">3</span>&#125;, &#123;<span class="attr">x</span>: <span class="number">5</span>&#125;, &#123;<span class="attr">x</span>: <span class="number">6</span>&#125;].reduce(<span class="function">(<span class="params">acc, current</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> acc + current.x</span><br><span class="line">&#125;, <span class="number">0</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>Promise 队列</strong></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> promiseFn = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">      setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'resolve1'</span>)</span><br><span class="line">        resolve()</span><br><span class="line">      &#125;, <span class="number">1000</span>)</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">let</span> promiseFn2 = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">      setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'resolve2'</span>)</span><br><span class="line">        resolve()</span><br><span class="line">      &#125;, <span class="number">1000</span>)</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">let</span> promiseFn3 = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">      setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'resolve3'</span>)</span><br><span class="line">        resolve(<span class="string">'last resolve'</span>)</span><br><span class="line">      &#125;, <span class="number">1000</span>)</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">let</span> pro = [promiseFn, promiseFn2, promiseFn3].reduce(<span class="function">(<span class="params">p, f</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> p.then(f)</span><br><span class="line">  &#125;, <span class="built_in">Promise</span>.resolve()) <span class="comment">// 提供initialValue，从第一个参数遍历</span></span><br><span class="line">  pro.then(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'res'</span>, res)</span><br><span class="line">  &#125;)</span><br></pre></td></tr></table></figure><ul><li><strong>计算数组中每个元素出现的次数</strong></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> names = [<span class="string">'alice'</span>, <span class="string">'Bob'</span>, <span class="string">'lee'</span>, <span class="string">'mark'</span>]</span><br><span class="line"><span class="keyword">let</span> nameNum = names.reduce(<span class="function">(<span class="params">acc, cur</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (!acc[cur]) &#123;</span><br><span class="line">        acc[cur] = <span class="number">0</span></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        acc[cur]++</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> acc</span><br><span class="line">&#125;, &#123;&#125;)</span><br></pre></td></tr></table></figure><ul><li><strong>数组去重</strong></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = [<span class="string">'1'</span>, <span class="string">'2'</span>, <span class="string">'2'</span>, <span class="string">'3'</span>, <span class="string">'4'</span>].reduce(<span class="function">(<span class="params">acc, cur</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (!acc.includes[cur]) &#123;</span><br><span class="line">    <span class="keyword">return</span> acc.concat(cur)</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> acc</span><br><span class="line">&#125;, [])</span><br><span class="line"><span class="comment">// 当然还可以使用new set </span></span><br><span class="line"><span class="comment">// Array.from 从一个类似数组或可迭代对象创建一个新的，浅拷贝的数组实例。</span></span><br><span class="line"><span class="built_in">Array</span>.from(<span class="keyword">new</span> <span class="built_in">Set</span>(myArray))</span><br></pre></td></tr></table></figure><ul><li><strong>二维数组转行成一维数组</strong></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = [[<span class="string">'1'</span>, <span class="string">'2'</span>], [<span class="string">'3'</span>, <span class="string">'4'</span>]].reduce(<span class="function">(<span class="params">acc, cur</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> acc.concat(cur)</span><br><span class="line">&#125;, [])</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;reduce方法&quot;&gt;&lt;a href=&quot;#reduce方法&quot; class=&quot;headerlink&quot; title=&quot;reduce方法&quot;&gt;&lt;/a&gt;reduce方法&lt;/h2&gt;&lt;p&gt;reduce 方法对数组的每个元素执行提供的reducer函数，将结果汇为单个返回值。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;arr.reduce(callback(accumulator, currentValue, index, array), initialValue)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;callback&lt;/strong&gt; 执行数组中每个值的函数，包括四个参数。&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;accumulator&lt;/strong&gt;回调&lt;code&gt;callback&lt;/code&gt;方法执行后的返回值&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;currentValue&lt;/strong&gt;数组中正在处理的当前值&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;index&lt;/strong&gt;数组中正在处理的当前值的索引&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;array&lt;/strong&gt;调用&lt;code&gt;reduce&lt;/code&gt;方法的数组&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;initialValue&lt;/strong&gt;设置的初始值（可选）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;注意：&lt;/strong&gt;若提供了初始值 &lt;code&gt;initialValue&lt;/code&gt;，将作为第一次调用callback函数时的第一个参数 &lt;code&gt;accumulator&lt;/code&gt; 的值，索引 &lt;code&gt;index&lt;/code&gt;从0开始，迭代次数为 &lt;code&gt;arr.length&lt;/code&gt;；若没有提供初始值&lt;code&gt;initialValue&lt;/code&gt;，则把数组第一个值作为callback第一个参数的值，索引 &lt;code&gt;index&lt;/code&gt;从1开始，迭代次数为 &lt;code&gt;arr.length - 1&lt;/code&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="JavaScript" scheme="http://yoursite.com/categories/JavaScript/"/>
    
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>浅谈JS数组去重</title>
    <link href="http://yoursite.com/2020/05/29/%E6%B5%85%E8%B0%88JS%E6%95%B0%E7%BB%84%E5%8E%BB%E9%87%8D/"/>
    <id>http://yoursite.com/2020/05/29/%E6%B5%85%E8%B0%88JS%E6%95%B0%E7%BB%84%E5%8E%BB%E9%87%8D/</id>
    <published>2020-05-29T03:10:44.000Z</published>
    <updated>2020-09-24T10:42:52.207Z</updated>
    
    <content type="html"><![CDATA[<h2 id="示例数组"><a href="#示例数组" class="headerlink" title="示例数组"></a>示例数组</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> baseArr = [<span class="number">1</span>, <span class="number">1</span>, <span class="string">'1'</span>, <span class="string">'1'</span>, <span class="number">2</span>, <span class="literal">true</span>, <span class="string">'true'</span>, <span class="literal">false</span>, <span class="literal">false</span>, <span class="literal">null</span>, <span class="literal">null</span>, &#123;&#125;, &#123;&#125;, [], [], <span class="literal">undefined</span>, <span class="literal">undefined</span>, <span class="literal">NaN</span>, <span class="literal">NaN</span>]</span><br></pre></td></tr></table></figure><h2 id="ES6-的-Set-去重"><a href="#ES6-的-Set-去重" class="headerlink" title="ES6 的 Set 去重"></a>ES6 的 Set 去重</h2><p>Set数据类似于数组，但是成员的值都是唯一的，没有重复的值。它可以接收一个数组，类于：let a=[1,2,3,1,2] Set(a)=&gt;1,2,3 所以可以使用Set()实现去重。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> resultArr = [ ...new <span class="built_in">Set</span>(baseArr) ]</span><br><span class="line"><span class="comment">// 或者</span></span><br><span class="line"><span class="keyword">const</span> resultArr = <span class="built_in">Array</span>.from(<span class="keyword">new</span> <span class="built_in">Set</span>(baseArr))</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(resultArr)  <span class="comment">// [1, "1", 2, true, "true", false, null, &#123;&#125;, &#123;&#125;, [], [], undefined, NaN]</span></span><br></pre></td></tr></table></figure><p>Set内部判断两个值是否不同，使用的算法叫做“Same-value equality”，它类似于精确相 等运算符（ === ），主要的区别是 NaN 等于自身，而精确相等运算符认 为 NaN 不等于自身。 另外，两个对象总是不相等的。</p> <a id="more"></a><p><strong>优点：</strong>简洁方便，可以区分<code>NaN</code>；</p><p><strong>缺点：</strong>无法识别相同对象和数组；</p><p>简单的场景建议使用该方法进行去重</p><h2 id="最基础的去重：双重遍历"><a href="#最基础的去重：双重遍历" class="headerlink" title="最基础的去重：双重遍历"></a>最基础的去重：双重遍历</h2><p>定义一个新数组，并存放原数组的第一个元素，然后将源数组一一和新数组的元素对比，若不同则存放在新数组中。</p><h4 id="不处理数组中对象"><a href="#不处理数组中对象" class="headerlink" title="不处理数组中对象"></a>不处理数组中对象</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">unique</span>(<span class="params">arr</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> resultArr = []</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">            <span class="keyword">let</span> repeat = <span class="literal">false</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">let</span> j = i+<span class="number">1</span>; j &lt; arr.length; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (arr[i] === arr[j]) &#123;</span><br><span class="line">                    repeat = <span class="literal">true</span></span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (!repeat) &#123;</span><br><span class="line">                resultArr.push(arr[i])</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">return</span> resultArr</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(unique(baseArr))  <span class="comment">// [1, "1", 2, true, "true", false, null, &#123;&#125;, &#123;&#125;, [], [], undefined, NaN, NaN]</span></span><br></pre></td></tr></table></figure><p><strong>缺点：</strong>无法识别相同对象和数组，还有<code>NaN</code>；</p><h4 id="处理数组中对象"><a href="#处理数组中对象" class="headerlink" title="处理数组中对象"></a>处理数组中对象</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">unique</span>(<span class="params">arr</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> resultArr = []</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">            <span class="keyword">let</span> repeat = <span class="literal">false</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">let</span> j = i+<span class="number">1</span>; j &lt; arr.length; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (<span class="built_in">JSON</span>.stringify(arr[i]) === <span class="built_in">JSON</span>.stringify(arr[j])) &#123;</span><br><span class="line">                    repeat = <span class="literal">true</span></span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (!repeat) &#123;</span><br><span class="line">                resultArr.push(arr[i])</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">return</span> resultArr</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(unique(baseArr))  <span class="comment">// [1, "1", 2, true, "true", false, &#123;&#125;, [], undefined, NaN]</span></span><br></pre></td></tr></table></figure><p><strong>优点：</strong>可以区分对象和数组；</p><p><strong>缺点：</strong>代码较复杂，不能区分 <code>null</code>；</p><h2 id="使用indexOf"><a href="#使用indexOf" class="headerlink" title="使用indexOf"></a>使用indexOf</h2><p>建立一个新的空数组，遍历源数组，往这个空数组里塞值，每次 push 之前，先判断是否已有相同的值。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">unique</span>(<span class="params">arr</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!<span class="built_in">Array</span>.isArray(arr)) <span class="keyword">return</span></span><br><span class="line">    <span class="keyword">let</span> resultArr = []</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (resultArr.indexOf(arr[i]) &lt; <span class="number">0</span>) &#123;</span><br><span class="line">            resultArr.push(arr[i])</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> resultArr</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(unique(baseArr))  <span class="comment">// [1, "1", 2, true, "true", false, null, &#123;&#125;, &#123;&#125;, [], [], undefined, NaN, NaN]</span></span><br></pre></td></tr></table></figure><p><strong>优点</strong>：ES5中常用方法，兼容性高，易于理解</p><p><strong>缺点：</strong>无法识别相同对象和数组，也不能区分 <code>NaN</code></p><h2 id="使用-ES6-的-includes"><a href="#使用-ES6-的-includes" class="headerlink" title="使用 ES6 的 includes"></a>使用 ES6 的 includes</h2><p>和<code>indexOf</code>类似，但<code>inculdes</code>是ES2016新增API</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">unique</span>(<span class="params">arr</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!<span class="built_in">Array</span>.isArray(arr)) <span class="keyword">return</span></span><br><span class="line">    <span class="keyword">let</span> resultArr = []</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!resultArr.includes(arr[i])) &#123;</span><br><span class="line">            resultArr.push(arr[i])</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> resultArr</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(unique(baseArr))  <span class="comment">// [1, "1", 2, true, "true", false, null, &#123;&#125;, &#123;&#125;, [], [], undefined, NaN]</span></span><br></pre></td></tr></table></figure><p><strong>优点</strong>：相对于 <code>indexOf</code>，可以区分 <code>NaN</code></p><p><strong>缺点：</strong>无法识别相同对象和数组</p><h2 id="利用reduce-includes"><a href="#利用reduce-includes" class="headerlink" title="利用reduce+includes"></a>利用reduce+includes</h2><p>两个高阶函数的巧妙使用</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> reducer = <span class="function">(<span class="params">prev, cur</span>) =&gt;</span> prev.includes(cur) ? prev : [...prev, cur]</span><br><span class="line"><span class="keyword">const</span> resultArr = baseArr.reduce(reducer, [])</span><br><span class="line"><span class="built_in">console</span>.log(resultArr)  <span class="comment">// [1, "1", 2, true, "true", false, null, &#123;&#125;, &#123;&#125;, [], [], undefined, NaN]</span></span><br></pre></td></tr></table></figure><p><strong>优点</strong>：代码极简，可以区分 <code>NaN</code></p><p><strong>缺点：</strong>无法识别相同对象和数组</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;示例数组&quot;&gt;&lt;a href=&quot;#示例数组&quot; class=&quot;headerlink&quot; title=&quot;示例数组&quot;&gt;&lt;/a&gt;示例数组&lt;/h2&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; baseArr = [&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;1&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;1&#39;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;true&#39;&lt;/span&gt;, &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;, &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;, &lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt;, &lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt;, &amp;#123;&amp;#125;, &amp;#123;&amp;#125;, [], [], &lt;span class=&quot;literal&quot;&gt;undefined&lt;/span&gt;, &lt;span class=&quot;literal&quot;&gt;undefined&lt;/span&gt;, &lt;span class=&quot;literal&quot;&gt;NaN&lt;/span&gt;, &lt;span class=&quot;literal&quot;&gt;NaN&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;h2 id=&quot;ES6-的-Set-去重&quot;&gt;&lt;a href=&quot;#ES6-的-Set-去重&quot; class=&quot;headerlink&quot; title=&quot;ES6 的 Set 去重&quot;&gt;&lt;/a&gt;ES6 的 Set 去重&lt;/h2&gt;&lt;p&gt;Set数据类似于数组，但是成员的值都是唯一的，没有重复的值。它可以接收一个数组，类于：let a=[1,2,3,1,2] Set(a)=&amp;gt;1,2,3 所以可以使用Set()实现去重。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; resultArr = [ ...new &lt;span class=&quot;built_in&quot;&gt;Set&lt;/span&gt;(baseArr) ]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 或者&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; resultArr = &lt;span class=&quot;built_in&quot;&gt;Array&lt;/span&gt;.from(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Set&lt;/span&gt;(baseArr))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(resultArr)  &lt;span class=&quot;comment&quot;&gt;// [1, &quot;1&quot;, 2, true, &quot;true&quot;, false, null, &amp;#123;&amp;#125;, &amp;#123;&amp;#125;, [], [], undefined, NaN]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;Set内部判断两个值是否不同，使用的算法叫做“Same-value equality”，它类似于精确相 等运算符（ === ），主要的区别是 NaN 等于自身，而精确相等运算符认 为 NaN 不等于自身。 另外，两个对象总是不相等的。&lt;/p&gt;
    
    </summary>
    
    
      <category term="JavaScript" scheme="http://yoursite.com/categories/JavaScript/"/>
    
      <category term="ES6" scheme="http://yoursite.com/categories/JavaScript/ES6/"/>
    
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
      <category term="ES6" scheme="http://yoursite.com/tags/ES6/"/>
    
  </entry>
  
  <entry>
    <title>使用ES6的Set求数组的交集、并集、差集</title>
    <link href="http://yoursite.com/2020/05/28/%E4%BD%BF%E7%94%A8ES6%E7%9A%84Set%E6%B1%82%E6%95%B0%E7%BB%84%E7%9A%84%E4%BA%A4%E9%9B%86%E3%80%81%E5%B9%B6%E9%9B%86%E3%80%81%E5%B7%AE%E9%9B%86/"/>
    <id>http://yoursite.com/2020/05/28/%E4%BD%BF%E7%94%A8ES6%E7%9A%84Set%E6%B1%82%E6%95%B0%E7%BB%84%E7%9A%84%E4%BA%A4%E9%9B%86%E3%80%81%E5%B9%B6%E9%9B%86%E3%80%81%E5%B7%AE%E9%9B%86/</id>
    <published>2020-05-28T12:08:09.000Z</published>
    <updated>2020-09-24T06:27:40.623Z</updated>
    
    <content type="html"><![CDATA[<h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><p>利用Set的 .has(value) 方法 ，判断值是否为 Set 的成员，并组合数组的 .filter()方法，返回新的数组。</p><h2 id="简单的数组"><a href="#简单的数组" class="headerlink" title="简单的数组"></a>简单的数组</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> arr1 = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]</span><br><span class="line"><span class="keyword">const</span> arr2 = [<span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment">// 并集</span></span><br><span class="line"><span class="keyword">const</span> merge1 = [...arr1, ...arr2])]</span><br><span class="line"></span><br><span class="line"><span class="comment">// 交集</span></span><br><span class="line"><span class="keyword">const</span> intersect = [...new <span class="built_in">Set</span>([...arr1].filter(<span class="function"><span class="params">item</span> =&gt;</span> arr2.has(item)))]</span><br><span class="line"></span><br><span class="line"><span class="comment">// 差集</span></span><br><span class="line"><span class="keyword">const</span> diff = [...new <span class="built_in">Set</span>([...arr1].filter(<span class="function"><span class="params">item</span> =&gt;</span> !arr2.has(item)))]</span><br></pre></td></tr></table></figure> <a id="more"></a><h2 id="带对象的数组"><a href="#带对象的数组" class="headerlink" title="带对象的数组"></a>带对象的数组</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> arr1 = [</span><br><span class="line">    &#123; <span class="attr">id</span>:<span class="number">1</span>, <span class="attr">a</span>:<span class="number">123</span>, <span class="attr">b</span>:<span class="number">1234</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">id</span>:<span class="number">2</span>, <span class="attr">a</span>:<span class="number">123</span>, <span class="attr">b</span>:<span class="number">1234</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">id</span>:<span class="number">3</span>, <span class="attr">a</span>:<span class="number">123</span>, <span class="attr">b</span>:<span class="number">1234</span> &#125;</span><br><span class="line">]</span><br><span class="line"><span class="keyword">const</span> arr2 = [</span><br><span class="line">    &#123; <span class="attr">id</span>:<span class="number">2</span>, <span class="attr">a</span>:<span class="number">123</span>, <span class="attr">b</span>:<span class="number">1234</span> &#125;</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"><span class="comment">// 交集</span></span><br><span class="line"><span class="keyword">const</span> intersect = [...arr1].filter(<span class="function"><span class="params">item1</span> =&gt;</span> [...arr2].some(<span class="function"><span class="params">item2</span> =&gt;</span> item2.id === item1.id))</span><br><span class="line"></span><br><span class="line"><span class="comment">// 差集</span></span><br><span class="line"><span class="keyword">const</span> diff = [...arr1].filter(<span class="function"><span class="params">item1</span> =&gt;</span> [...arr2].every(<span class="function"><span class="params">item2</span> =&gt;</span> item2.id !== item.id))</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;原理&quot;&gt;&lt;a href=&quot;#原理&quot; class=&quot;headerlink&quot; title=&quot;原理&quot;&gt;&lt;/a&gt;原理&lt;/h2&gt;&lt;p&gt;利用Set的 .has(value) 方法 ，判断值是否为 Set 的成员，并组合数组的 .filter()方法，返回新的数组。&lt;/p&gt;
&lt;h2 id=&quot;简单的数组&quot;&gt;&lt;a href=&quot;#简单的数组&quot; class=&quot;headerlink&quot; title=&quot;简单的数组&quot;&gt;&lt;/a&gt;简单的数组&lt;/h2&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; arr1 = [&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; arr2 = [&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 并集&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; merge1 = [...arr1, ...arr2])]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 交集&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; intersect = [...new &lt;span class=&quot;built_in&quot;&gt;Set&lt;/span&gt;([...arr1].filter(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;params&quot;&gt;item&lt;/span&gt; =&amp;gt;&lt;/span&gt; arr2.has(item)))]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 差集&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; diff = [...new &lt;span class=&quot;built_in&quot;&gt;Set&lt;/span&gt;([...arr1].filter(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;params&quot;&gt;item&lt;/span&gt; =&amp;gt;&lt;/span&gt; !arr2.has(item)))]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="ES6" scheme="http://yoursite.com/categories/ES6/"/>
    
    
      <category term="ES6" scheme="http://yoursite.com/tags/ES6/"/>
    
  </entry>
  
  <entry>
    <title>Vue利用Drag实现列表的拖拽排序</title>
    <link href="http://yoursite.com/2020/05/27/Vue%E5%88%A9%E7%94%A8Drag%E5%AE%9E%E7%8E%B0%E5%88%97%E8%A1%A8%E7%9A%84%E6%8B%96%E6%8B%BD%E6%8E%92%E5%BA%8F/"/>
    <id>http://yoursite.com/2020/05/27/Vue%E5%88%A9%E7%94%A8Drag%E5%AE%9E%E7%8E%B0%E5%88%97%E8%A1%A8%E7%9A%84%E6%8B%96%E6%8B%BD%E6%8E%92%E5%BA%8F/</id>
    <published>2020-05-27T07:33:47.000Z</published>
    <updated>2020-05-27T08:00:55.758Z</updated>
    
    <content type="html"><![CDATA[<h2 id="基础属性"><a href="#基础属性" class="headerlink" title="基础属性"></a>基础属性</h2><h4 id="draggable：true，表示元素可以被拖动-false，表示元素不可以被拖动"><a href="#draggable：true，表示元素可以被拖动-false，表示元素不可以被拖动" class="headerlink" title="draggable：true，表示元素可以被拖动;  false，表示元素不可以被拖动"></a><strong>draggable：</strong>true，表示元素可以被拖动;  false，表示元素不可以被拖动</h4><h2 id="拖拽事件"><a href="#拖拽事件" class="headerlink" title="拖拽事件"></a>拖拽事件</h2><table><thead><tr><th align="center"><strong>Event</strong></th><th align="center"><strong>On Event Handler</strong></th><th align="center"><strong>Fires when…</strong></th></tr></thead><tbody><tr><td align="center">drag</td><td align="center">ondrag</td><td align="center">当拖动元素或选中的文本时触发</td></tr><tr><td align="center">dragend</td><td align="center">ondragend</td><td align="center">当拖拽操作结束时触发 (比如松开鼠标按键或敲“Esc”键)</td></tr><tr><td align="center">dragenter</td><td align="center">ondragenter</td><td align="center">当拖动元素或选中的文本到一个可释放目标时触发</td></tr><tr><td align="center">dragexit</td><td align="center">ondragexit</td><td align="center">当元素变得不再是拖动操作的选中目标时触发</td></tr><tr><td align="center">dragleave</td><td align="center">ondragleave</td><td align="center">当拖动元素或选中的文本离开一个可释放目标时触发</td></tr><tr><td align="center">dragover</td><td align="center">ondragover</td><td align="center">当元素或选中的文本被拖到一个可释放目标上时触发（每100毫秒触发一次）</td></tr><tr><td align="center">dragstart</td><td align="center">ondragstart</td><td align="center">当用户开始拖动一个元素或选中的文本时触发</td></tr><tr><td align="center">drop</td><td align="center">ondrop</td><td align="center">当元素或选中的文本在可释放目标上被释放时触发</td></tr></tbody></table> <a id="more"></a><h2 id="具体实现"><a href="#具体实现" class="headerlink" title="具体实现"></a>具体实现</h2><p>1、设置 div 元素属性 <code>draggable=&quot;true&quot;</code> 实现可拖拽</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">draggable</span>=<span class="string">"true"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>2、设置元素被拖拽时的各阶段事件，进行列表位置交换</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">&lt;div v-for=&quot;(item, index) in list&quot; :key=&quot;index&quot; draggable=&quot;true&quot; @dragstart=&quot;handleDragStart(index)&quot;</span><br><span class="line">          @dragenter=&quot;handleDragEnter($event, index)&quot; @dragend=&quot;handleDragEnd&quot;&gt;</span><br><span class="line">        &#123;&#123;item.name&#125;&#125;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    export default &#123;</span><br><span class="line">        data () &#123;</span><br><span class="line">            return &#123;</span><br><span class="line">                list: [],</span><br><span class="line">                dragFrom: -1,</span><br><span class="line">                dragTo: -1</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        methods: &#123;</span><br><span class="line">            handleDragStart (index) &#123;</span><br><span class="line">              this.dragFrom = index</span><br><span class="line">            &#125;,</span><br><span class="line">            handleDragEnter (event, index) &#123;</span><br><span class="line">              event.dataTransfer.effectAllowed = &apos;move&apos;</span><br><span class="line">              this.dragTo = index</span><br><span class="line">            &#125;,</span><br><span class="line">            handleDragEnd () &#123;</span><br><span class="line">              const newEle = this.list</span><br><span class="line">              newEle.splice(this.dragTo, 0, ...newEle.splice(this.dragFrom, 1))</span><br><span class="line">              this.dragFrom = -1</span><br><span class="line">              this.dragTo = -1</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;基础属性&quot;&gt;&lt;a href=&quot;#基础属性&quot; class=&quot;headerlink&quot; title=&quot;基础属性&quot;&gt;&lt;/a&gt;基础属性&lt;/h2&gt;&lt;h4 id=&quot;draggable：true，表示元素可以被拖动-false，表示元素不可以被拖动&quot;&gt;&lt;a href=&quot;#draggable：true，表示元素可以被拖动-false，表示元素不可以被拖动&quot; class=&quot;headerlink&quot; title=&quot;draggable：true，表示元素可以被拖动;  false，表示元素不可以被拖动&quot;&gt;&lt;/a&gt;&lt;strong&gt;draggable：&lt;/strong&gt;true，表示元素可以被拖动;  false，表示元素不可以被拖动&lt;/h4&gt;&lt;h2 id=&quot;拖拽事件&quot;&gt;&lt;a href=&quot;#拖拽事件&quot; class=&quot;headerlink&quot; title=&quot;拖拽事件&quot;&gt;&lt;/a&gt;拖拽事件&lt;/h2&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&quot;center&quot;&gt;&lt;strong&gt;Event&lt;/strong&gt;&lt;/th&gt;
&lt;th align=&quot;center&quot;&gt;&lt;strong&gt;On Event Handler&lt;/strong&gt;&lt;/th&gt;
&lt;th align=&quot;center&quot;&gt;&lt;strong&gt;Fires when…&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;drag&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;ondrag&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;当拖动元素或选中的文本时触发&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;dragend&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;ondragend&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;当拖拽操作结束时触发 (比如松开鼠标按键或敲“Esc”键)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;dragenter&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;ondragenter&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;当拖动元素或选中的文本到一个可释放目标时触发&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;dragexit&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;ondragexit&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;当元素变得不再是拖动操作的选中目标时触发&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;dragleave&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;ondragleave&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;当拖动元素或选中的文本离开一个可释放目标时触发&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;dragover&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;ondragover&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;当元素或选中的文本被拖到一个可释放目标上时触发（每100毫秒触发一次）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;dragstart&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;ondragstart&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;当用户开始拖动一个元素或选中的文本时触发&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;drop&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;ondrop&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;当元素或选中的文本在可释放目标上被释放时触发&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
    
    </summary>
    
    
      <category term="HTML5" scheme="http://yoursite.com/categories/HTML5/"/>
    
    
      <category term="HTML5" scheme="http://yoursite.com/tags/HTML5/"/>
    
  </entry>
  
  <entry>
    <title>Vue-Draggable多列表之间的拖拽和排序</title>
    <link href="http://yoursite.com/2020/05/21/Vue-Draggable%E5%A4%9A%E5%88%97%E8%A1%A8%E4%B9%8B%E9%97%B4%E7%9A%84%E6%8B%96%E6%8B%BD%E5%92%8C%E6%8E%92%E5%BA%8F/"/>
    <id>http://yoursite.com/2020/05/21/Vue-Draggable%E5%A4%9A%E5%88%97%E8%A1%A8%E4%B9%8B%E9%97%B4%E7%9A%84%E6%8B%96%E6%8B%BD%E5%92%8C%E6%8E%92%E5%BA%8F/</id>
    <published>2020-05-21T09:29:17.000Z</published>
    <updated>2020-06-02T07:12:58.518Z</updated>
    
    <content type="html"><![CDATA[<h2 id="简单介绍"><a href="#简单介绍" class="headerlink" title="简单介绍"></a>简单介绍</h2><p><strong>Vue-Draggable是一个基于Sortable.js的vue组件，用以实现拖拽功能</strong></p><h2 id="使用步骤"><a href="#使用步骤" class="headerlink" title="使用步骤"></a>使用步骤</h2><h3 id="1-Install-Vue-Draggable-安装"><a href="#1-Install-Vue-Draggable-安装" class="headerlink" title="1.  Install  Vue-Draggable (安装)"></a>1.  Install  Vue-Draggable (安装)</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i -S vuedraggable</span><br></pre></td></tr></table></figure><h3 id="2-组件内使用代码"><a href="#2-组件内使用代码" class="headerlink" title="2.  组件内使用代码"></a>2.  组件内使用代码</h3> <a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;drag-list-wrapper&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;list-one&quot;&gt;</span><br><span class="line">      &lt;div class=&quot;list-title&quot;&gt;列表1事项&lt;/div&gt;</span><br><span class="line">        &lt;Draggable v-model=&quot;listOne&quot; group=&quot;list&quot; @end=&quot;handleChange($event)&quot;&gt;</span><br><span class="line">          &lt;span v-for=&quot;(item, index) in listOne&quot; :key=&quot;index&quot;&gt;&#123;&#123; item &#125;&#125;&lt;/span&gt;</span><br><span class="line">        &lt;/Draggable&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div class=&quot;list-two&quot;&gt;</span><br><span class="line">      &lt;div class=&quot;list-title&quot;&gt;列表2事项&lt;/div&gt;</span><br><span class="line">        &lt;Draggable v-model=&quot;listTwo&quot; group=&quot;list&quot; @end=&quot;handleChange($event)&quot;&gt;</span><br><span class="line">          &lt;span v-for=&quot;(item, index) in listTwo&quot; :key=&quot;index&quot;&gt;&#123;&#123; item &#125;&#125;&lt;/span&gt;</span><br><span class="line">        &lt;/Draggable&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  data () &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      listOne: [&apos;ECMAScript6&apos;,&apos;VueJS&apos;,&apos;ReactJS&apos;,&apos;AngularJS&apos;,&apos;Webpack&apos;,&apos;NodeJS&apos;,&apos;TypeScript&apos;],</span><br><span class="line">      listTwo: []</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    handleChange (event, type) &#123;</span><br><span class="line">      console.log(event, type)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><em>注意：列表间能够相互拖拽的关键属性是<code>group</code>，因此必须配置相同的  <code>group</code>值</em></p><h3 id="3-效果展示"><a href="#3-效果展示" class="headerlink" title="3.  效果展示"></a>3.  效果展示</h3><p><img src="01.gif" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;简单介绍&quot;&gt;&lt;a href=&quot;#简单介绍&quot; class=&quot;headerlink&quot; title=&quot;简单介绍&quot;&gt;&lt;/a&gt;简单介绍&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;Vue-Draggable是一个基于Sortable.js的vue组件，用以实现拖拽功能&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&quot;使用步骤&quot;&gt;&lt;a href=&quot;#使用步骤&quot; class=&quot;headerlink&quot; title=&quot;使用步骤&quot;&gt;&lt;/a&gt;使用步骤&lt;/h2&gt;&lt;h3 id=&quot;1-Install-Vue-Draggable-安装&quot;&gt;&lt;a href=&quot;#1-Install-Vue-Draggable-安装&quot; class=&quot;headerlink&quot; title=&quot;1.  Install  Vue-Draggable (安装)&quot;&gt;&lt;/a&gt;1.  Install  Vue-Draggable (安装)&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm i -S vuedraggable&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&quot;2-组件内使用代码&quot;&gt;&lt;a href=&quot;#2-组件内使用代码&quot; class=&quot;headerlink&quot; title=&quot;2.  组件内使用代码&quot;&gt;&lt;/a&gt;2.  组件内使用代码&lt;/h3&gt;
    
    </summary>
    
    
      <category term="Vue" scheme="http://yoursite.com/categories/Vue/"/>
    
      <category term="vue-admin-system文档" scheme="http://yoursite.com/categories/Vue/vue-admin-system%E6%96%87%E6%A1%A3/"/>
    
    
      <category term="Vue" scheme="http://yoursite.com/tags/Vue/"/>
    
      <category term="vue-admin-system文档" scheme="http://yoursite.com/tags/vue-admin-system%E6%96%87%E6%A1%A3/"/>
    
  </entry>
  
  <entry>
    <title>Vue使用树状结构图v-org-tree</title>
    <link href="http://yoursite.com/2020/05/19/Vue%E4%BD%BF%E7%94%A8%E6%A0%91%E7%8A%B6%E7%BB%93%E6%9E%84%E5%9B%BEv-org-tree/"/>
    <id>http://yoursite.com/2020/05/19/Vue%E4%BD%BF%E7%94%A8%E6%A0%91%E7%8A%B6%E7%BB%93%E6%9E%84%E5%9B%BEv-org-tree/</id>
    <published>2020-05-19T07:32:30.000Z</published>
    <updated>2020-06-01T08:42:03.621Z</updated>
    
    <content type="html"><![CDATA[<h2 id="简单介绍"><a href="#简单介绍" class="headerlink" title="简单介绍"></a>简单介绍</h2><p><strong>v-org-tree是一个基于Vue封装的组织结构树组件，支持自定义节点和收缩按钮，高自由度定制，有水平和垂直两种方向</strong></p><h2 id="使用步骤"><a href="#使用步骤" class="headerlink" title="使用步骤"></a>使用步骤</h2><h3 id="1-Install-v-org-tree-安装"><a href="#1-Install-v-org-tree-安装" class="headerlink" title="1.  Install  v-org-tree (安装)"></a>1.  Install  v-org-tree (安装)</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install v-org-tree</span><br></pre></td></tr></table></figure><h3 id="2-组件内使用代码"><a href="#2-组件内使用代码" class="headerlink" title="2.  组件内使用代码"></a>2.  组件内使用代码</h3> <a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;template&gt;</span><br><span class="line">&lt;OrgTree :data=&quot;data&quot;</span><br><span class="line">             collapsable</span><br><span class="line">             :node-render=&quot;nodeRender&quot;</span><br><span class="line">             :expand-all=&quot;expandAll&quot;</span><br><span class="line">             :horizontal=&quot;horizontal&quot;</span><br><span class="line">             :props=&quot;props&quot;</span><br><span class="line">             @on-expand=&quot;onExpand&quot;</span><br><span class="line">             @on-node-click=&quot;onNodeClick&quot;/&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import OrgTree from &apos;v-org-tree&apos;</span><br><span class="line">import &apos;v-org-tree/dist/v-org-tree.css&apos;</span><br><span class="line">import &#123; data &#125; from &apos;./tree-data&apos;</span><br><span class="line">export default &#123;</span><br><span class="line">  name: &apos;OrgView&apos;,</span><br><span class="line">  data () &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      data,</span><br><span class="line">      expandAll: true,</span><br><span class="line">      horizontal: false,</span><br><span class="line">      props: &#123;</span><br><span class="line">        id: &apos;id&apos;,</span><br><span class="line">        label: &apos;label&apos;,</span><br><span class="line">        expand: &apos;expand&apos;,</span><br><span class="line">        children: &apos;children&apos;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  components: &#123; OrgTree &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    nodeRender (h, data) &#123;</span><br><span class="line">      return data.label</span><br><span class="line">    &#125;,</span><br><span class="line">    onExpand (val, status) &#123;</span><br><span class="line">      console.log(val, status)</span><br><span class="line">    &#125;,</span><br><span class="line">    onNodeClick (e, data) &#123;</span><br><span class="line">      console.log(data)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="3-data数据结构（注意：配置的-props-的属性值应与-data中的字段对应）"><a href="#3-data数据结构（注意：配置的-props-的属性值应与-data中的字段对应）" class="headerlink" title="3.  data数据结构（注意：配置的  props 的属性值应与 data中的字段对应）"></a>3.  data数据结构（注意：配置的  props 的属性值应与 data中的字段对应）</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> data = &#123;</span><br><span class="line">  id: <span class="number">0</span>,</span><br><span class="line">  label: <span class="string">'XXX科技有限公司'</span>,</span><br><span class="line">  children: [</span><br><span class="line">    &#123;</span><br><span class="line">      id: <span class="number">2</span>,</span><br><span class="line">      label: <span class="string">'产品研发部'</span>,</span><br><span class="line">      children: [</span><br><span class="line">        &#123;</span><br><span class="line">          id: <span class="number">5</span>,</span><br><span class="line">          label: <span class="string">'产品经理'</span></span><br><span class="line">        &#125;, &#123;</span><br><span class="line">          id: <span class="number">6</span>,</span><br><span class="line">          label: <span class="string">'UI设计'</span></span><br><span class="line">        &#125;, &#123;</span><br><span class="line">          id: <span class="number">9</span>,</span><br><span class="line">          label: <span class="string">'研发-前端'</span></span><br><span class="line">        &#125;, &#123;</span><br><span class="line">          id: <span class="number">10</span>,</span><br><span class="line">          label: <span class="string">'研发-后端'</span></span><br><span class="line">        &#125;, &#123;</span><br><span class="line">          id: <span class="number">12</span>,</span><br><span class="line">          label: <span class="string">'测试'</span></span><br><span class="line">        &#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      id: <span class="number">3</span>,</span><br><span class="line">      label: <span class="string">'销售部'</span>,</span><br><span class="line">      children: [</span><br><span class="line">        &#123;</span><br><span class="line">          id: <span class="number">7</span>,</span><br><span class="line">          label: <span class="string">'销售一部'</span>,</span><br><span class="line">          children: [</span><br><span class="line">            &#123;</span><br><span class="line">              id: <span class="number">14</span>,</span><br><span class="line">              label: <span class="string">'售前'</span></span><br><span class="line">            &#125;, &#123;</span><br><span class="line">              id: <span class="number">15</span>,</span><br><span class="line">              label: <span class="string">'售后'</span></span><br><span class="line">            &#125;, &#123;</span><br><span class="line">              id: <span class="number">16</span>,</span><br><span class="line">              label: <span class="string">'客服'</span></span><br><span class="line">            &#125;</span><br><span class="line">          ]</span><br><span class="line">        &#125;, &#123;</span><br><span class="line">          id: <span class="number">8</span>,</span><br><span class="line">          label: <span class="string">'销售二部'</span></span><br><span class="line">        &#125;, &#123;</span><br><span class="line">          id: <span class="number">13</span>,</span><br><span class="line">          label: <span class="string">'销售三部'</span></span><br><span class="line">        &#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      id: <span class="number">4</span>,</span><br><span class="line">      label: <span class="string">'财务部'</span></span><br><span class="line">    &#125;, &#123;</span><br><span class="line">      id: <span class="number">11</span>,</span><br><span class="line">      label: <span class="string">'HR人事'</span></span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-效果如下"><a href="#4-效果如下" class="headerlink" title="4.  效果如下"></a>4.  效果如下</h3><ul><li><h4 id="垂直排列"><a href="#垂直排列" class="headerlink" title="垂直排列"></a>垂直排列</h4></li></ul><p><img src="01.png" alt=""></p><ul><li><h4 id="水平排列"><a href="#水平排列" class="headerlink" title="水平排列"></a>水平排列</h4></li></ul><p><img src="02.png" alt=""></p><p>````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````</p><p>参考资料：<a href="https://github.com/lison16/v-org-tree" target="_blank" rel="noopener">树状结构图v-org-tree的GitHub地址</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;简单介绍&quot;&gt;&lt;a href=&quot;#简单介绍&quot; class=&quot;headerlink&quot; title=&quot;简单介绍&quot;&gt;&lt;/a&gt;简单介绍&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;v-org-tree是一个基于Vue封装的组织结构树组件，支持自定义节点和收缩按钮，高自由度定制，有水平和垂直两种方向&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&quot;使用步骤&quot;&gt;&lt;a href=&quot;#使用步骤&quot; class=&quot;headerlink&quot; title=&quot;使用步骤&quot;&gt;&lt;/a&gt;使用步骤&lt;/h2&gt;&lt;h3 id=&quot;1-Install-v-org-tree-安装&quot;&gt;&lt;a href=&quot;#1-Install-v-org-tree-安装&quot; class=&quot;headerlink&quot; title=&quot;1.  Install  v-org-tree (安装)&quot;&gt;&lt;/a&gt;1.  Install  v-org-tree (安装)&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm install v-org-tree&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&quot;2-组件内使用代码&quot;&gt;&lt;a href=&quot;#2-组件内使用代码&quot; class=&quot;headerlink&quot; title=&quot;2.  组件内使用代码&quot;&gt;&lt;/a&gt;2.  组件内使用代码&lt;/h3&gt;
    
    </summary>
    
    
      <category term="Vue" scheme="http://yoursite.com/categories/Vue/"/>
    
      <category term="vue-admin-system文档" scheme="http://yoursite.com/categories/Vue/vue-admin-system%E6%96%87%E6%A1%A3/"/>
    
    
      <category term="Vue" scheme="http://yoursite.com/tags/Vue/"/>
    
      <category term="vue-admin-system文档" scheme="http://yoursite.com/tags/vue-admin-system%E6%96%87%E6%A1%A3/"/>
    
  </entry>
  
  <entry>
    <title>Vue利用HTML5拖放（Drag and Drop）功能实现数据（或资源）传递</title>
    <link href="http://yoursite.com/2020/05/18/Vue%E5%88%A9%E7%94%A8HTML5%E6%8B%96%E6%94%BE%EF%BC%88Drag%20and%20Drop%EF%BC%89%E5%8A%9F%E8%83%BD%E5%AE%9E%E7%8E%B0%E6%95%B0%E6%8D%AE%EF%BC%88%E6%88%96%E8%B5%84%E6%BA%90%EF%BC%89%E4%BC%A0%E9%80%92/"/>
    <id>http://yoursite.com/2020/05/18/Vue%E5%88%A9%E7%94%A8HTML5%E6%8B%96%E6%94%BE%EF%BC%88Drag%20and%20Drop%EF%BC%89%E5%8A%9F%E8%83%BD%E5%AE%9E%E7%8E%B0%E6%95%B0%E6%8D%AE%EF%BC%88%E6%88%96%E8%B5%84%E6%BA%90%EF%BC%89%E4%BC%A0%E9%80%92/</id>
    <published>2020-05-18T09:39:49.000Z</published>
    <updated>2020-05-27T07:30:21.571Z</updated>
    
    <content type="html"><![CDATA[<h2 id="基础属性"><a href="#基础属性" class="headerlink" title="基础属性"></a>基础属性</h2><h4 id="draggable：true，表示元素可以被拖动-false，表示元素不可以被拖动"><a href="#draggable：true，表示元素可以被拖动-false，表示元素不可以被拖动" class="headerlink" title="draggable：true，表示元素可以被拖动;  false，表示元素不可以被拖动"></a><strong>draggable：</strong>true，表示元素可以被拖动;  false，表示元素不可以被拖动</h4><h2 id="拖拽事件"><a href="#拖拽事件" class="headerlink" title="拖拽事件"></a>拖拽事件</h2><table><thead><tr><th align="center"><strong>Event</strong></th><th align="center"><strong>On Event Handler</strong></th><th align="center"><strong>Fires when…</strong></th></tr></thead><tbody><tr><td align="center">drag</td><td align="center">ondrag</td><td align="center">当拖动元素或选中的文本时触发</td></tr><tr><td align="center">dragend</td><td align="center">ondragend</td><td align="center">当拖拽操作结束时触发 (比如松开鼠标按键或敲“Esc”键)</td></tr><tr><td align="center">dragenter</td><td align="center">ondragenter</td><td align="center">当拖动元素或选中的文本到一个可释放目标时触发</td></tr><tr><td align="center">dragexit</td><td align="center">ondragexit</td><td align="center">当元素变得不再是拖动操作的选中目标时触发</td></tr><tr><td align="center">dragleave</td><td align="center">ondragleave</td><td align="center">当拖动元素或选中的文本离开一个可释放目标时触发</td></tr><tr><td align="center">dragover</td><td align="center">ondragover</td><td align="center">当元素或选中的文本被拖到一个可释放目标上时触发（每100毫秒触发一次）</td></tr><tr><td align="center">dragstart</td><td align="center">ondragstart</td><td align="center">当用户开始拖动一个元素或选中的文本时触发</td></tr><tr><td align="center">drop</td><td align="center">ondrop</td><td align="center">当元素或选中的文本在可释放目标上被释放时触发</td></tr></tbody></table> <a id="more"></a><h2 id="具体实现"><a href="#具体实现" class="headerlink" title="具体实现"></a>具体实现</h2><p>1、设置 div 元素属性 <code>draggable=&quot;true&quot;</code> 实现可拖拽</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">draggable</span>=<span class="string">"true"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>2、通过 div 元素拖拽开始 <code>dragstart</code> 事件，将数据存储（通过 <code>dataTransfer.setData(format, data)</code> 实现）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">&lt;div v-for=&quot;(item, index) in list&quot; :key=&quot;index&quot; draggable=&quot;true&quot; @dragstart=&quot;dragstart($event, item)&quot; @dragend=&quot;dragend&quot;&gt;</span><br><span class="line">    &#123;&#123;item.name&#125;&#125;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">    methods: &#123;</span><br><span class="line">        dragstart (event, data) &#123;</span><br><span class="line">  let resData = JSON.stringify(data)</span><br><span class="line">event.dataTransfer.setData(&apos;text&apos;, resData)</span><br><span class="line">&#125;,</span><br><span class="line">        dragend (event) &#123;</span><br><span class="line">          event.dataTransfer.clearData()</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><strong>注意：</strong>  <em>因为传递的数据 data 是个对象（Object），而 <code>dataTransfer.setData(format, data)</code> 中的第二个参数 data 接受的是个字符串（String），所以需要将其进行转换；而它的第一个参数 format 是设置传递数据的格式，设置成 text 格式，是为了兼容IE10及以上版本，否则在IE中会报错；接受数据同理</em></p><p>3、通过 div 元素在释放区的 <code>drop</code> 事件，获取存储的数据（通过 <code>dataTransfer.getData(format)</code> 实现）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div @drop=&quot;dropEle&quot; @dragover.prevent&gt;&lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">    dropEle (event) &#123;</span><br><span class="line">      let data = event.dataTransfer.getData(&apos;text&apos;)</span><br><span class="line">      let resData = JSON.parse(data)</span><br><span class="line">      console.log(resData)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><strong>注意：</strong>  <em>必须给拖放区元素添加 dragover.prevent，才能使 drop 事件正确执行</em></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;基础属性&quot;&gt;&lt;a href=&quot;#基础属性&quot; class=&quot;headerlink&quot; title=&quot;基础属性&quot;&gt;&lt;/a&gt;基础属性&lt;/h2&gt;&lt;h4 id=&quot;draggable：true，表示元素可以被拖动-false，表示元素不可以被拖动&quot;&gt;&lt;a href=&quot;#draggable：true，表示元素可以被拖动-false，表示元素不可以被拖动&quot; class=&quot;headerlink&quot; title=&quot;draggable：true，表示元素可以被拖动;  false，表示元素不可以被拖动&quot;&gt;&lt;/a&gt;&lt;strong&gt;draggable：&lt;/strong&gt;true，表示元素可以被拖动;  false，表示元素不可以被拖动&lt;/h4&gt;&lt;h2 id=&quot;拖拽事件&quot;&gt;&lt;a href=&quot;#拖拽事件&quot; class=&quot;headerlink&quot; title=&quot;拖拽事件&quot;&gt;&lt;/a&gt;拖拽事件&lt;/h2&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&quot;center&quot;&gt;&lt;strong&gt;Event&lt;/strong&gt;&lt;/th&gt;
&lt;th align=&quot;center&quot;&gt;&lt;strong&gt;On Event Handler&lt;/strong&gt;&lt;/th&gt;
&lt;th align=&quot;center&quot;&gt;&lt;strong&gt;Fires when…&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;drag&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;ondrag&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;当拖动元素或选中的文本时触发&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;dragend&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;ondragend&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;当拖拽操作结束时触发 (比如松开鼠标按键或敲“Esc”键)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;dragenter&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;ondragenter&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;当拖动元素或选中的文本到一个可释放目标时触发&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;dragexit&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;ondragexit&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;当元素变得不再是拖动操作的选中目标时触发&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;dragleave&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;ondragleave&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;当拖动元素或选中的文本离开一个可释放目标时触发&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;dragover&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;ondragover&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;当元素或选中的文本被拖到一个可释放目标上时触发（每100毫秒触发一次）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;dragstart&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;ondragstart&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;当用户开始拖动一个元素或选中的文本时触发&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;drop&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;ondrop&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;当元素或选中的文本在可释放目标上被释放时触发&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
    
    </summary>
    
    
      <category term="HTML5" scheme="http://yoursite.com/categories/HTML5/"/>
    
    
      <category term="HTML5" scheme="http://yoursite.com/tags/HTML5/"/>
    
  </entry>
  
  <entry>
    <title>MacOS安装npm全局包的权限问题</title>
    <link href="http://yoursite.com/2020/05/16/MacOS%E5%AE%89%E8%A3%85npm%E5%85%A8%E5%B1%80%E5%8C%85%E7%9A%84%E6%9D%83%E9%99%90%E9%97%AE%E9%A2%98/"/>
    <id>http://yoursite.com/2020/05/16/MacOS%E5%AE%89%E8%A3%85npm%E5%85%A8%E5%B1%80%E5%8C%85%E7%9A%84%E6%9D%83%E9%99%90%E9%97%AE%E9%A2%98/</id>
    <published>2020-05-16T13:41:16.000Z</published>
    <updated>2020-05-27T07:26:54.466Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题点"><a href="#问题点" class="headerlink" title="问题点"></a>问题点</h2><h4 id="MacOS，安装npm全局包提示没有写入权限，提示如下："><a href="#MacOS，安装npm全局包提示没有写入权限，提示如下：" class="headerlink" title="MacOS，安装npm全局包提示没有写入权限，提示如下："></a>MacOS，安装npm全局包提示没有写入权限，提示如下：</h4><p><code>npm WARN checkPermissions Missing write access to /usr/local/lib/node_modules</code></p><h4 id="如图："><a href="#如图：" class="headerlink" title="如图："></a>如图：</h4><p><img src="01.png" alt=""></p><h2 id="解决方法："><a href="#解决方法：" class="headerlink" title="解决方法："></a><strong>解决方法：</strong></h2><p><strong>修改npm包所安装目录的权限，代码如下：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo chown -R $USER /usr/local</span><br></pre></td></tr></table></figure><p>注意：<strong><em>$USER</em></strong> 为Mac用户名，sudo操作需要输入用户密码</p><p><strong>查看目录是否已切换权限，代码如下：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ls -l /usr/local</span><br></pre></td></tr></table></figure><p>完毕，即可进行npm全局包安装</p> <a id="more"></a>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;问题点&quot;&gt;&lt;a href=&quot;#问题点&quot; class=&quot;headerlink&quot; title=&quot;问题点&quot;&gt;&lt;/a&gt;问题点&lt;/h2&gt;&lt;h4 id=&quot;MacOS，安装npm全局包提示没有写入权限，提示如下：&quot;&gt;&lt;a href=&quot;#MacOS，安装npm全局包提示没有写入权限，提示如下：&quot; class=&quot;headerlink&quot; title=&quot;MacOS，安装npm全局包提示没有写入权限，提示如下：&quot;&gt;&lt;/a&gt;MacOS，安装npm全局包提示没有写入权限，提示如下：&lt;/h4&gt;&lt;p&gt;&lt;code&gt;npm WARN checkPermissions Missing write access to /usr/local/lib/node_modules&lt;/code&gt;&lt;/p&gt;
&lt;h4 id=&quot;如图：&quot;&gt;&lt;a href=&quot;#如图：&quot; class=&quot;headerlink&quot; title=&quot;如图：&quot;&gt;&lt;/a&gt;如图：&lt;/h4&gt;&lt;p&gt;&lt;img src=&quot;01.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;解决方法：&quot;&gt;&lt;a href=&quot;#解决方法：&quot; class=&quot;headerlink&quot; title=&quot;解决方法：&quot;&gt;&lt;/a&gt;&lt;strong&gt;解决方法：&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;修改npm包所安装目录的权限，代码如下：&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo chown -R $USER /usr/local&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;注意：&lt;strong&gt;&lt;em&gt;$USER&lt;/em&gt;&lt;/strong&gt; 为Mac用户名，sudo操作需要输入用户密码&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;查看目录是否已切换权限，代码如下：&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ls -l /usr/local&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;完毕，即可进行npm全局包安装&lt;/p&gt;
    
    </summary>
    
    
      <category term="Nodejs" scheme="http://yoursite.com/categories/Nodejs/"/>
    
      <category term="Npm包管理" scheme="http://yoursite.com/categories/Nodejs/Npm%E5%8C%85%E7%AE%A1%E7%90%86/"/>
    
    
      <category term="Nodejs" scheme="http://yoursite.com/tags/Nodejs/"/>
    
      <category term="Npm包管理" scheme="http://yoursite.com/tags/Npm%E5%8C%85%E7%AE%A1%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>Vue使用数字滚动插件vue-countTo</title>
    <link href="http://yoursite.com/2020/05/16/Vue%E4%BD%BF%E7%94%A8%E6%95%B0%E5%AD%97%E6%BB%9A%E5%8A%A8%E6%8F%92%E4%BB%B6vue-countTo/"/>
    <id>http://yoursite.com/2020/05/16/Vue%E4%BD%BF%E7%94%A8%E6%95%B0%E5%AD%97%E6%BB%9A%E5%8A%A8%E6%8F%92%E4%BB%B6vue-countTo/</id>
    <published>2020-05-16T08:46:06.000Z</published>
    <updated>2020-06-02T08:16:39.867Z</updated>
    
    <content type="html"><![CDATA[<h2 id="简单介绍"><a href="#简单介绍" class="headerlink" title="简单介绍"></a>简单介绍</h2><p><strong>vue-countTo是一个无依赖，轻量级的vue数字滚动插件</strong></p><h2 id="使用步骤"><a href="#使用步骤" class="headerlink" title="使用步骤"></a>使用步骤</h2><h3 id="1-Install-vue-countTo-安装"><a href="#1-Install-vue-countTo-安装" class="headerlink" title="1.  Install  vue-countTo (安装)"></a>1.  Install  vue-countTo (安装)</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install vue-count-to</span><br></pre></td></tr></table></figure><h3 id="2-组件内使用代码"><a href="#2-组件内使用代码" class="headerlink" title="2.  组件内使用代码"></a>2.  组件内使用代码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;countTo :startVal=&apos;startVal&apos; :endVal=&apos;endVal&apos; :duration=&apos;3000&apos;&gt;&lt;/countTo&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">  import countTo from &apos;vue-count-to&apos;;</span><br><span class="line">  export default &#123;</span><br><span class="line">    data () &#123;</span><br><span class="line">      return &#123;</span><br><span class="line">        startVal: 0,</span><br><span class="line">        endVal: 2020</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    components: &#123; countTo &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><a id="more"></a> <h3 id="3-属性及方法配置"><a href="#3-属性及方法配置" class="headerlink" title="3.  属性及方法配置"></a>3.  属性及方法配置</h3><ul><li>属性：</li></ul><table><thead><tr><th align="center"><strong>Property</strong></th><th align="center"><strong>Description</strong></th><th align="center"><strong>type</strong></th><th align="center"><strong>default</strong></th></tr></thead><tbody><tr><td align="center">startVal</td><td align="center">开始值</td><td align="center">Number</td><td align="center">0</td></tr><tr><td align="center">endVal</td><td align="center">结束值</td><td align="center">Number</td><td align="center">2017</td></tr><tr><td align="center">duration</td><td align="center">持续时间，以毫秒为单位</td><td align="center">Number</td><td align="center">3000</td></tr><tr><td align="center">autoplay</td><td align="center">自动播放</td><td align="center">Boolean</td><td align="center">true</td></tr><tr><td align="center">decimals</td><td align="center">要显示的小数位数</td><td align="center">Number</td><td align="center">0</td></tr><tr><td align="center">decimal</td><td align="center">十进制分割</td><td align="center">String</td><td align="center">.</td></tr><tr><td align="center">separator</td><td align="center">分隔符</td><td align="center">String</td><td align="center">,</td></tr><tr><td align="center">prefix</td><td align="center">前缀</td><td align="center">String</td><td align="center">‘’</td></tr><tr><td align="center">suffix</td><td align="center">后缀</td><td align="center">String</td><td align="center">‘’</td></tr><tr><td align="center">useEasing</td><td align="center">使用缓动</td><td align="center">Boolean</td><td align="center">true</td></tr><tr><td align="center">easingFn</td><td align="center">缓动回调方法</td><td align="center">Function</td><td align="center">—</td></tr></tbody></table><ul><li>方法：</li></ul><table><thead><tr><th align="center"><strong>Function Name</strong></th><th align="center"><strong>Description</strong></th></tr></thead><tbody><tr><td align="center">mountedCallback</td><td align="center">挂载成功后回调</td></tr><tr><td align="center">start</td><td align="center">开始计数时调用</td></tr><tr><td align="center">pause</td><td align="center">暂停计数时调用</td></tr><tr><td align="center">reset</td><td align="center">重置countTo</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;简单介绍&quot;&gt;&lt;a href=&quot;#简单介绍&quot; class=&quot;headerlink&quot; title=&quot;简单介绍&quot;&gt;&lt;/a&gt;简单介绍&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;vue-countTo是一个无依赖，轻量级的vue数字滚动插件&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&quot;使用步骤&quot;&gt;&lt;a href=&quot;#使用步骤&quot; class=&quot;headerlink&quot; title=&quot;使用步骤&quot;&gt;&lt;/a&gt;使用步骤&lt;/h2&gt;&lt;h3 id=&quot;1-Install-vue-countTo-安装&quot;&gt;&lt;a href=&quot;#1-Install-vue-countTo-安装&quot; class=&quot;headerlink&quot; title=&quot;1.  Install  vue-countTo (安装)&quot;&gt;&lt;/a&gt;1.  Install  vue-countTo (安装)&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm install vue-count-to&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&quot;2-组件内使用代码&quot;&gt;&lt;a href=&quot;#2-组件内使用代码&quot; class=&quot;headerlink&quot; title=&quot;2.  组件内使用代码&quot;&gt;&lt;/a&gt;2.  组件内使用代码&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;template&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;lt;countTo :startVal=&amp;apos;startVal&amp;apos; :endVal=&amp;apos;endVal&amp;apos; :duration=&amp;apos;3000&amp;apos;&amp;gt;&amp;lt;/countTo&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/template&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  import countTo from &amp;apos;vue-count-to&amp;apos;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  export default &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    data () &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      return &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        startVal: 0,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        endVal: 2020&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    components: &amp;#123; countTo &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="Vue" scheme="http://yoursite.com/categories/Vue/"/>
    
      <category term="vue-admin-system文档" scheme="http://yoursite.com/categories/Vue/vue-admin-system%E6%96%87%E6%A1%A3/"/>
    
    
      <category term="Vue" scheme="http://yoursite.com/tags/Vue/"/>
    
      <category term="vue-admin-system文档" scheme="http://yoursite.com/tags/vue-admin-system%E6%96%87%E6%A1%A3/"/>
    
  </entry>
  
  <entry>
    <title>使用Vue封装wangEditor组件</title>
    <link href="http://yoursite.com/2020/05/14/%E4%BD%BF%E7%94%A8Vue%E5%B0%81%E8%A3%85wangEditor%E7%BB%84%E4%BB%B6/"/>
    <id>http://yoursite.com/2020/05/14/%E4%BD%BF%E7%94%A8Vue%E5%B0%81%E8%A3%85wangEditor%E7%BB%84%E4%BB%B6/</id>
    <published>2020-05-14T08:18:24.000Z</published>
    <updated>2020-05-14T08:50:14.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="具体步骤如下"><a href="#具体步骤如下" class="headerlink" title="具体步骤如下"></a>具体步骤如下</h2><h3 id="1-Install-wang-editor-安装"><a href="#1-Install-wang-editor-安装" class="headerlink" title="1. Install  wang-editor (安装)"></a>1. Install  wang-editor (安装)</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install wangeditor</span><br></pre></td></tr></table></figure><p>（注意 <code>wangeditor</code> 全部是<strong>小写字母</strong>）</p><h3 id="2-封装成Vue组件"><a href="#2-封装成Vue组件" class="headerlink" title="2. 封装成Vue组件"></a>2. 封装成Vue组件</h3><ul><li><p>子组件代码</p><a id="more"></a> </li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;editor-wrapper&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;editor-container&quot; ref=&quot;editorEle&quot;&gt;&lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import E from &apos;wangeditor&apos;</span><br><span class="line">export default &#123;</span><br><span class="line">  name: &apos;Editor&apos;,</span><br><span class="line">  data () &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      editor: null</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  props: &#123;</span><br><span class="line">    value: &#123;</span><br><span class="line">      type: String,</span><br><span class="line">      default: &apos;&apos;</span><br><span class="line">    &#125;,</span><br><span class="line">    placeholder: &#123;</span><br><span class="line">      type: String,</span><br><span class="line">      default: &apos;&apos;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  watch: &#123;</span><br><span class="line">    value (val) &#123;</span><br><span class="line">      this.editor.txt.html(val)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  mounted () &#123;</span><br><span class="line">    this.editor = new E(this.$refs.editorEle)</span><br><span class="line">    this.editor.customConfig.onchange = (html) =&gt; &#123;</span><br><span class="line">      this.$emit(&apos;input&apos;, html)</span><br><span class="line">    &#125;</span><br><span class="line">    // 创建富文本实例</span><br><span class="line">    this.editor.create()</span><br><span class="line">    this.editor.txt.html(this.placeholder)</span><br><span class="line">  &#125;,</span><br><span class="line">  beforeDestroy () &#123;</span><br><span class="line">    this.editor.destroy()</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><ul><li>父组件代码</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;rich-text-editor&quot;&gt;</span><br><span class="line">    &lt;Editor v-model=&quot;content&quot; :placeholder=&quot;placeholder&quot;/&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import Editor from &apos;../../components/Editor&apos;</span><br><span class="line">export default &#123;</span><br><span class="line">  name: &apos;RichTextEditor&apos;,</span><br><span class="line">  data () &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      content: &apos;&apos;,</span><br><span class="line">      placeholder: &apos;&lt;b style=&quot;font-size: 16px&quot;&gt;请输入内容...&lt;/b&gt;&apos;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  components: &#123; Editor &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h4 id="3-图片上传"><a href="#3-图片上传" class="headerlink" title="3. 图片上传"></a>3. 图片上传</h4><p>配置代码入下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  mounted () &#123;</span><br><span class="line">    this.editor.customConfig.uploadImgServer = &apos;你的上传图片的接口&apos;</span><br><span class="line">    this.editor.customConfig.uploadFileName = &apos;你自定义的文件名&apos;</span><br><span class="line">    // 下面是最重要的的方法</span><br><span class="line">    this.editor.customConfig.uploadImgHooks = &#123;</span><br><span class="line">      before: function (xhr, editor, files) &#123;</span><br><span class="line">        // 图片上传之前触发</span><br><span class="line">        // xhr 是 XMLHttpRequst 对象，editor 是编辑器对象，files 是选择的图片文件</span><br><span class="line"></span><br><span class="line">        // 如果返回的结果是 &#123;prevent: true, msg: &apos;xxxx&apos;&#125; 则表示用户放弃上传</span><br><span class="line">        // return &#123;</span><br><span class="line">        //     prevent: true,</span><br><span class="line">        //     msg: &apos;放弃上传&apos;</span><br><span class="line">        // &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      success: function (xhr, editor, result) &#123;</span><br><span class="line">        // 图片上传并返回结果，图片插入成功之后触发</span><br><span class="line">        // xhr 是 XMLHttpRequst 对象，editor 是编辑器对象，result 是服务器端返回的结果</span><br><span class="line">      &#125;,</span><br><span class="line">      fail: function (xhr, editor, result) &#123;</span><br><span class="line">        // 图片上传并返回结果，但图片插入错误时触发</span><br><span class="line">        // xhr 是 XMLHttpRequst 对象，editor 是编辑器对象，result 是服务器端返回的结果</span><br><span class="line">      &#125;,</span><br><span class="line">      error: function (xhr, editor) &#123;</span><br><span class="line">        // 图片上传出错时触发</span><br><span class="line">        // xhr 是 XMLHttpRequst 对象，editor 是编辑器对象</span><br><span class="line">      &#125;,</span><br><span class="line">      timeout: function (xhr, editor) &#123;</span><br><span class="line">        // 图片上传超时时触发</span><br><span class="line">        // xhr 是 XMLHttpRequst 对象，editor 是编辑器对象</span><br><span class="line">      &#125;,</span><br><span class="line"></span><br><span class="line">      // 如果服务器端返回的不是 &#123;errno:0, data: [...]&#125; 这种格式，可使用该配置</span><br><span class="line">      // （但是，服务器端返回的必须是一个 JSON 格式字符串！！！否则会报错）</span><br><span class="line">      customInsert: function (insertImg, result, editor) &#123;</span><br><span class="line">        // 图片上传并返回结果，自定义插入图片的事件（而不是编辑器自动插入图片！！！）</span><br><span class="line">        // insertImg 是插入图片的函数，editor 是编辑器对象，result 是服务器端返回的结果</span><br><span class="line"></span><br><span class="line">        // 举例：假如上传图片成功后，服务器端返回的是 &#123;url:&apos;....&apos;&#125; 这种格式，即可这样插入图片：</span><br><span class="line">        // result.data就是服务器返回的图片名字和链接</span><br><span class="line">        let url = Object.values(result.data)</span><br><span class="line">        // 在这里转成JSON格式</span><br><span class="line">        JSON.stringify(url)</span><br><span class="line">        insertImg(url)</span><br><span class="line">        // result 必须是一个 JSON 格式字符串！！！否则报错</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````</p><p>参考内容：<a href="https://www.kancloud.cn/wangfupeng/wangeditor3/335782" target="_blank" rel="noopener">wangEditor3使用手册-上传图片到服务器</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;具体步骤如下&quot;&gt;&lt;a href=&quot;#具体步骤如下&quot; class=&quot;headerlink&quot; title=&quot;具体步骤如下&quot;&gt;&lt;/a&gt;具体步骤如下&lt;/h2&gt;&lt;h3 id=&quot;1-Install-wang-editor-安装&quot;&gt;&lt;a href=&quot;#1-Install-wang-editor-安装&quot; class=&quot;headerlink&quot; title=&quot;1. Install  wang-editor (安装)&quot;&gt;&lt;/a&gt;1. Install  wang-editor (安装)&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm install wangeditor&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;（注意 &lt;code&gt;wangeditor&lt;/code&gt; 全部是&lt;strong&gt;小写字母&lt;/strong&gt;）&lt;/p&gt;
&lt;h3 id=&quot;2-封装成Vue组件&quot;&gt;&lt;a href=&quot;#2-封装成Vue组件&quot; class=&quot;headerlink&quot; title=&quot;2. 封装成Vue组件&quot;&gt;&lt;/a&gt;2. 封装成Vue组件&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;子组件代码&lt;/p&gt;
    
    </summary>
    
    
      <category term="Vue" scheme="http://yoursite.com/categories/Vue/"/>
    
      <category term="vue-admin-system文档" scheme="http://yoursite.com/categories/Vue/vue-admin-system%E6%96%87%E6%A1%A3/"/>
    
    
      <category term="Vue" scheme="http://yoursite.com/tags/Vue/"/>
    
      <category term="vue-admin-system文档" scheme="http://yoursite.com/tags/vue-admin-system%E6%96%87%E6%A1%A3/"/>
    
  </entry>
  
  <entry>
    <title>Vue使用Markdown编辑器mavonEditor</title>
    <link href="http://yoursite.com/2020/05/13/Vue%E4%BD%BF%E7%94%A8Markdown%E7%BC%96%E8%BE%91%E5%99%A8mavonEditor/"/>
    <id>http://yoursite.com/2020/05/13/Vue%E4%BD%BF%E7%94%A8Markdown%E7%BC%96%E8%BE%91%E5%99%A8mavonEditor/</id>
    <published>2020-05-13T07:00:29.000Z</published>
    <updated>2020-05-26T12:58:26.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="具体步骤如下"><a href="#具体步骤如下" class="headerlink" title="具体步骤如下"></a>具体步骤如下</h2><h3 id="1-Install-mavon-editor-安装"><a href="#1-Install-mavon-editor-安装" class="headerlink" title="1.  Install mavon-editor (安装)"></a>1.  Install mavon-editor (安装)</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install mavon-editor --save</span><br></pre></td></tr></table></figure><h3 id="2-Use-如何引入"><a href="#2-Use-如何引入" class="headerlink" title="2.  Use (如何引入)"></a>2.  Use (如何引入)</h3><ul><li>全局注册</li></ul><p><code>main.js</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 全局注册</span></span><br><span class="line">   <span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">'vue'</span></span><br><span class="line">   <span class="keyword">import</span> mavonEditor <span class="keyword">from</span> <span class="string">'mavon-editor'</span></span><br><span class="line">   <span class="keyword">import</span> <span class="string">'mavon-editor/dist/css/index.css'</span></span><br><span class="line">   <span class="comment">// use</span></span><br><span class="line">   Vue.use(mavonEditor)</span><br><span class="line">   <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">       <span class="string">'el'</span>: <span class="string">'#main'</span>,</span><br><span class="line">       data() &#123;</span><br><span class="line">           <span class="keyword">return</span> &#123; <span class="attr">value</span>: <span class="string">''</span> &#125;</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;)</span><br></pre></td></tr></table></figure><a id="more"></a> <p><code>index.html</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"main"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mavon-editor</span> <span class="attr">v-model</span>=<span class="string">"value"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>组件内注册</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;markdown-editor&quot;&gt;</span><br><span class="line">    &lt;mavonEditor v-model=&quot;content&quot; style=&quot;min-height: 500px&quot;/&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">import &#123; mavonEditor &#125; from &apos;mavon-editor&apos;</span><br><span class="line">import &apos;mavon-editor/dist/css/index.css&apos;</span><br><span class="line">export default &#123;</span><br><span class="line">name: &apos;MarkdownEditor&apos;,</span><br><span class="line">  data () &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      content: &apos;&apos;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  components: &#123; mavonEditor &#125;,</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h4 id="3-图片上传"><a href="#3-图片上传" class="headerlink" title="3.  图片上传"></a>3.  图片上传</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;markdown-editor&quot;&gt;</span><br><span class="line">    &lt;mavonEditor v-model=&quot;content&quot; ref=&quot;markdownEle&quot; @imgAdd=&quot;imageAdd&quot; @imgDel=&quot;imageDel&quot;/&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">import &#123; axios &#125; from &apos;axios&apos;</span><br><span class="line">export default &#123;</span><br><span class="line">methods: &#123;</span><br><span class="line">    // 绑定@imgAdd event</span><br><span class="line">    imageAdd (pos, file) &#123;</span><br><span class="line">      // 将图片上传到服务器</span><br><span class="line">      let formData = new FormData()</span><br><span class="line">      formData.append(&apos;image&apos;, file)</span><br><span class="line">      this.imageFile[pos] = file</span><br><span class="line">      axios(&#123;</span><br><span class="line">        url: &apos;server url&apos;,</span><br><span class="line">        method: &apos;post&apos;,</span><br><span class="line">        data: formData,</span><br><span class="line">        headers: &#123; &apos;Content-Type&apos;: &apos;multipart/form-data&apos; &#125;</span><br><span class="line">      &#125;).then(res =&gt; &#123;</span><br><span class="line">        let data = res.data</span><br><span class="line">        this.$refs.markdownEle.$img2Url(pos, data.url)</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;,</span><br><span class="line">    // 绑定@imgDel event</span><br><span class="line">    imageDel (pos) &#123;</span><br><span class="line">      delete this.imageFile[pos]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````</p><p>参考文章：<a href="https://github.com/hinesboy/mavonEditor/blob/master/README.md" target="_blank" rel="noopener">Markdown编辑器mavonEditor的GitHub地址</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;具体步骤如下&quot;&gt;&lt;a href=&quot;#具体步骤如下&quot; class=&quot;headerlink&quot; title=&quot;具体步骤如下&quot;&gt;&lt;/a&gt;具体步骤如下&lt;/h2&gt;&lt;h3 id=&quot;1-Install-mavon-editor-安装&quot;&gt;&lt;a href=&quot;#1-Install-mavon-editor-安装&quot; class=&quot;headerlink&quot; title=&quot;1.  Install mavon-editor (安装)&quot;&gt;&lt;/a&gt;1.  Install mavon-editor (安装)&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm install mavon-editor --save&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&quot;2-Use-如何引入&quot;&gt;&lt;a href=&quot;#2-Use-如何引入&quot; class=&quot;headerlink&quot; title=&quot;2.  Use (如何引入)&quot;&gt;&lt;/a&gt;2.  Use (如何引入)&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;全局注册&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;main.js&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 全局注册&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; Vue &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;vue&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; mavonEditor &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;mavon-editor&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;mavon-editor/dist/css/index.css&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;comment&quot;&gt;// use&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   Vue.use(mavonEditor)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Vue(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;string&quot;&gt;&#39;el&#39;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;#main&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       data() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &amp;#123; &lt;span class=&quot;attr&quot;&gt;value&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="Vue" scheme="http://yoursite.com/categories/Vue/"/>
    
      <category term="vue-admin-system文档" scheme="http://yoursite.com/categories/Vue/vue-admin-system%E6%96%87%E6%A1%A3/"/>
    
    
      <category term="Vue" scheme="http://yoursite.com/tags/Vue/"/>
    
      <category term="vue-admin-system文档" scheme="http://yoursite.com/tags/vue-admin-system%E6%96%87%E6%A1%A3/"/>
    
  </entry>
  
  <entry>
    <title>Vue项目中使用echarts并封装成组件</title>
    <link href="http://yoursite.com/2020/05/10/Vue%E9%A1%B9%E7%9B%AE%E4%B8%AD%E4%BD%BF%E7%94%A8echarts%E5%B9%B6%E5%B0%81%E8%A3%85%E6%88%90%E7%BB%84%E4%BB%B6/"/>
    <id>http://yoursite.com/2020/05/10/Vue%E9%A1%B9%E7%9B%AE%E4%B8%AD%E4%BD%BF%E7%94%A8echarts%E5%B9%B6%E5%B0%81%E8%A3%85%E6%88%90%E7%BB%84%E4%BB%B6/</id>
    <published>2020-05-10T02:52:03.000Z</published>
    <updated>2020-06-02T06:57:28.550Z</updated>
    
    <content type="html"><![CDATA[<h2 id="简单介绍"><a href="#简单介绍" class="headerlink" title="简单介绍"></a>简单介绍</h2><p><strong>echarts是非常强大的数据可视化插件，经常用来进行图表展示，本文介绍将echarts进行vue组件化封装并使用</strong></p><h2 id="基础配置"><a href="#基础配置" class="headerlink" title="基础配置"></a>基础配置</h2><ul><li><h4 id="标题-title"><a href="#标题-title" class="headerlink" title="标题 title"></a>标题 title</h4><p>text（String）: 标题名</p><p>left（Number）: 水平位置</p><p>top（Number）: 垂直位置</p><p>textStyle（Object）: 标题样式</p></li></ul><a id="more"></a> <ul><li><h4 id="提示工具-tooltip"><a href="#提示工具-tooltip" class="headerlink" title="提示工具 tooltip"></a>提示工具 tooltip</h4><p>trigger（String） : ‘item’ 数据项触发，’axis’ 坐标轴触发</p><p>formatter : 提示的格式</p></li><li><h4 id="系列列表-series"><a href="#系列列表-series" class="headerlink" title="系列列表 series"></a>系列列表 series</h4><p>type（String）: 图标类型</p><p>name（String）: 名称</p><p>center（Array）: 图标渲染位置坐标</p><p>data（Array）: 数据数组</p><p>itemStyle（Object）: 每项的样式</p></li></ul><h2 id="使用步骤"><a href="#使用步骤" class="headerlink" title="使用步骤"></a>使用步骤</h2><h3 id="1-Install-echarts-安装"><a href="#1-Install-echarts-安装" class="headerlink" title="1.  Install  echarts (安装)"></a>1.  Install  echarts (安装)</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install echarts -S</span><br></pre></td></tr></table></figure><h3 id="2-组件封装-（饼图为例）"><a href="#2-组件封装-（饼图为例）" class="headerlink" title="2.  组件封装 （饼图为例）"></a>2.  组件封装 （饼图为例）</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div ref=&quot;dom&quot; class=&quot;charts-pie&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import echarts from &apos;echarts&apos;</span><br><span class="line"></span><br><span class="line">export default &#123;</span><br><span class="line">  name: &apos;ChartsPie&apos;,</span><br><span class="line">  data () &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      dom: null</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  props: &#123;</span><br><span class="line">    title: &#123;</span><br><span class="line">      type: String,</span><br><span class="line">      default: &apos;&apos;</span><br><span class="line">    &#125;,</span><br><span class="line">    data: &#123;</span><br><span class="line">      type: Array,</span><br><span class="line">      default: () =&gt; []</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  mounted () &#123;</span><br><span class="line">    this.drawing()</span><br><span class="line">  &#125;,</span><br><span class="line">  beforeDestroy () &#123;</span><br><span class="line">    window.removeEventListener(&apos;resize&apos;, this.resize)</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    resize () &#123;</span><br><span class="line">      this.dom.resize()</span><br><span class="line">    &#125;,</span><br><span class="line">    drawing () &#123;</span><br><span class="line">      let legendData = this.data.map(item =&gt; item.name)</span><br><span class="line">      let options = &#123;</span><br><span class="line">        // 标题</span><br><span class="line">        title: &#123;</span><br><span class="line">          text: this.title,</span><br><span class="line">          left: &apos;center&apos;,</span><br><span class="line">          top: 15,</span><br><span class="line">          textStyle: &#123;</span><br><span class="line">            fontSize: 16,</span><br><span class="line">            fontWeight: &apos;normal&apos;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        // 工具提示</span><br><span class="line">        tooltip: &#123;</span><br><span class="line">          trigger: &apos;item&apos;,</span><br><span class="line">          formatter: &apos;&#123;a&#125; &lt;br/&gt;&#123;b&#125; : &#123;c&#125; (&#123;d&#125;%)&apos;</span><br><span class="line">        &#125;,</span><br><span class="line">        // 图例说明</span><br><span class="line">        legend: &#123;</span><br><span class="line">          show: true,</span><br><span class="line">          orient: &apos;vertical&apos;,</span><br><span class="line">          left: 10,</span><br><span class="line">          top: 20,</span><br><span class="line">          itemWidth: 25,</span><br><span class="line">          itemHeight: 15,</span><br><span class="line">          itemGap: 5,</span><br><span class="line">          data: legendData,</span><br><span class="line">          textStyle: &#123;</span><br><span class="line">            color: &apos;#aaa&apos;,</span><br><span class="line">            fontSize: 12</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        // 颜色配置</span><br><span class="line">        color: [&apos;#2d8cf0&apos;, &apos;#19be6b&apos;, &apos;#ff9900&apos;, &apos;#e46cbb&apos;, &apos;#9a66e4&apos;],</span><br><span class="line">        // 类型配置</span><br><span class="line">        series: [</span><br><span class="line">          &#123;</span><br><span class="line">            itemStyle: &#123;</span><br><span class="line">              normal: &#123;</span><br><span class="line">                label: &#123;</span><br><span class="line">                  show: true,</span><br><span class="line">                  fontSize: 14,</span><br><span class="line">                  formatter: &apos;&#123;c&#125; (&#123;d&#125;%)&apos;</span><br><span class="line">                &#125;,</span><br><span class="line">                labelLine: &#123;</span><br><span class="line">                  show: true</span><br><span class="line">                &#125;</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            name: &apos;访问来源&apos;,</span><br><span class="line">            // 类型配置</span><br><span class="line">            type: &apos;pie&apos;,</span><br><span class="line">            radius: &apos;70%&apos;,</span><br><span class="line">            center: [&apos;52%&apos;, &apos;55%&apos;],</span><br><span class="line">            // 数据配置</span><br><span class="line">            data: this.data</span><br><span class="line">          &#125;</span><br><span class="line">        ]</span><br><span class="line">      &#125;</span><br><span class="line">      this.dom = echarts.init(this.$refs.dom)</span><br><span class="line">      this.dom.setOption(options)</span><br><span class="line">      window.addEventListener(&apos;resize&apos;, this.resize)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="3-组件使用"><a href="#3-组件使用" class="headerlink" title="3.  组件使用"></a>3.  组件使用</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;ChartsPie :title=text :data=&quot;chartsPieData&quot;/&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">import ChartsPie from &apos;../components/Charts/ChartsPie&apos;</span><br><span class="line">export default &#123;</span><br><span class="line">  data () &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      text: &apos;用户访问来源&apos;,</span><br><span class="line">      chartsPieData: [</span><br><span class="line">        &#123; value: 1920, name: &apos;直接访问&apos; &#125;,</span><br><span class="line">        &#123; value: 1169, name: &apos;邮件营销&apos; &#125;,</span><br><span class="line">        &#123; value: 986, name: &apos;联盟广告&apos; &#125;,</span><br><span class="line">        &#123; value: 621, name: &apos;视频广告&apos; &#125;,</span><br><span class="line">        &#123; value: 3256, name: &apos;搜索引擎&apos; &#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="4-效果展示"><a href="#4-效果展示" class="headerlink" title="4.  效果展示"></a>4.  效果展示</h3><p><img src="01.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;简单介绍&quot;&gt;&lt;a href=&quot;#简单介绍&quot; class=&quot;headerlink&quot; title=&quot;简单介绍&quot;&gt;&lt;/a&gt;简单介绍&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;echarts是非常强大的数据可视化插件，经常用来进行图表展示，本文介绍将echarts进行vue组件化封装并使用&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&quot;基础配置&quot;&gt;&lt;a href=&quot;#基础配置&quot; class=&quot;headerlink&quot; title=&quot;基础配置&quot;&gt;&lt;/a&gt;基础配置&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;h4 id=&quot;标题-title&quot;&gt;&lt;a href=&quot;#标题-title&quot; class=&quot;headerlink&quot; title=&quot;标题 title&quot;&gt;&lt;/a&gt;标题 title&lt;/h4&gt;&lt;p&gt;text（String）: 标题名&lt;/p&gt;
&lt;p&gt;left（Number）: 水平位置&lt;/p&gt;
&lt;p&gt;top（Number）: 垂直位置&lt;/p&gt;
&lt;p&gt;textStyle（Object）: 标题样式&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="Vue" scheme="http://yoursite.com/categories/Vue/"/>
    
      <category term="vue-admin-system文档" scheme="http://yoursite.com/categories/Vue/vue-admin-system%E6%96%87%E6%A1%A3/"/>
    
    
      <category term="Vue" scheme="http://yoursite.com/tags/Vue/"/>
    
      <category term="vue-admin-system文档" scheme="http://yoursite.com/tags/vue-admin-system%E6%96%87%E6%A1%A3/"/>
    
  </entry>
  
  <entry>
    <title>Vue+ElementUI使用第三方icon图标（FontClass引用法+SVG引用法）</title>
    <link href="http://yoursite.com/2019/11/18/Vue+ElementUI%E4%BD%BF%E7%94%A8%E7%AC%AC%E4%B8%89%E6%96%B9icon%E5%9B%BE%E6%A0%87/"/>
    <id>http://yoursite.com/2019/11/18/Vue+ElementUI%E4%BD%BF%E7%94%A8%E7%AC%AC%E4%B8%89%E6%96%B9icon%E5%9B%BE%E6%A0%87/</id>
    <published>2019-11-18T03:33:33.000Z</published>
    <updated>2019-12-23T09:24:36.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="具体步骤如下"><a href="#具体步骤如下" class="headerlink" title="具体步骤如下"></a>具体步骤如下</h2><p>打开<a href="https://www.iconfont.cn/" target="_blank" rel="noopener">阿里icon</a>，注册 &gt;登录&gt;图标管理&gt;我的项目</p><p><img src="01.png" alt=""></p><p>新建项目</p><p><img src="02.png" alt=""></p><p>填写项目名称和前缀（前缀不能为：<code>el-icon</code>），点新建</p><p><img src="03.png" alt=""></p><p>返回首页，点进去你想要的<code>icon</code>库，将想要的图标添加入库</p><p><img src="04.png" alt=""></p><p>若需要批量添加图标，可在控制台输入如下代码</p> <a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">var icons = document.querySelectorAll(&apos;.icon-gouwuche1&apos;);</span><br><span class="line"></span><br><span class="line">var auto_click = function(i) &#123; if (i &lt; icons.length) &#123; setTimeout(function() &#123; icons.item(i).click(); auto_click(i + 1); &#125;, 600); &#125; &#125;;</span><br><span class="line"></span><br><span class="line">auto_click(0);</span><br></pre></td></tr></table></figure><p>点击购物车</p><p><img src="05.png" alt=""></p><p>把图标添加到刚才创建的项目里</p><p><img src="06.png" alt=""></p><h3 id="FontClass引用法"><a href="#FontClass引用法" class="headerlink" title="FontClass引用法"></a>FontClass引用法</h3><p>设置fontClass，然后下载到本地</p><p><img src="07.png" alt=""></p><p>解压后，打开<code>iconfont.css</code>文件，在<code>.iconfont{}</code>类名后面添加如下代码（注意：<code>vue-ele-icon</code>是你之前设置的<code>icon</code>前缀，第二个<code>vue-ele-icon</code>前边有空格的）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[class^=&quot;vue-ele-icon&quot;], [class*=&quot; vue-ele-icon&quot;]/*这里有空格*/</span><br><span class="line">&#123; </span><br><span class="line">font-family: &quot;iconfont&quot; !important;</span><br><span class="line">font-size: 16px;</span><br><span class="line">font-style: normal;</span><br><span class="line">-webkit-font-smoothing: antialiased;</span><br><span class="line">-moz-osx-font-smoothing: grayscale; </span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><p>设置好以后，打开<code>vue</code>项目，在<code>src-assets</code>下创建了<code>icon-fonts</code>文件夹，将所有的文件复制过来，在<code>main.js</code>里边把<code>css</code>引进来</p><p><img src="08.png" alt=""></p><p>然后重新npm run dev 一下</p><p>打开在阿里icon的项目，复制你想要的图标代码</p><p><img src="09.png" alt=""></p><p>使用方式，跟<code>element</code>自带的使用方法一样</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;i class=&quot;vue-ele-icon-delete&quot;&gt;&lt;/i&gt;</span><br><span class="line">&lt;el-button type=&quot;primary&quot; icon=&quot;vue-ele-icon-search&quot;&gt;搜索&lt;/el-button&gt;</span><br></pre></td></tr></table></figure><h3 id="SVG（Symbol）引用法"><a href="#SVG（Symbol）引用法" class="headerlink" title="SVG（Symbol）引用法"></a>SVG（Symbol）引用法</h3><p>设置<code>Symbol</code>，然后下载到本地</p><p><img src="10.png" alt=""></p><p>打开<code>vue</code>项目，在<code>src-assets</code>下创建了<code>icon-fonts</code>文件夹，将解压所有的文件复制过来，在<code>main.js</code>里边把<code>js</code>引进来</p><p><img src="11.png" alt=""></p><p>创建<code>SVG</code>组件，代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;svg :class=&quot;svgClass&quot; aria-hidden=&quot;true&quot;&gt;</span><br><span class="line">    &lt;use :xlink:href=&quot;iconName&quot;&gt;&lt;/use&gt;</span><br><span class="line">  &lt;/svg&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  name: &apos;SvgIcon&apos;,</span><br><span class="line">  props: &#123;</span><br><span class="line">    iconClass: &#123;</span><br><span class="line">      type: String,</span><br><span class="line">      required: true</span><br><span class="line">    &#125;,</span><br><span class="line">    className: &#123;</span><br><span class="line">      type: String</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  computed: &#123;</span><br><span class="line">    iconName () &#123;</span><br><span class="line">      return `#$&#123;this.iconClass&#125;`</span><br><span class="line">    &#125;,</span><br><span class="line">    svgClass () &#123;</span><br><span class="line">      if (this.className) &#123;</span><br><span class="line">        return &apos;svg-icon &apos; + this.className</span><br><span class="line">      &#125; else &#123;</span><br><span class="line">        return &apos;svg-icon&apos;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style lang=&quot;scss&quot;&gt;</span><br><span class="line">  .svg-icon &#123;</span><br><span class="line">    width: 1em;</span><br><span class="line">    height: 1em;</span><br><span class="line">    vertical-align: -0.15em;</span><br><span class="line">    fill: currentColor;</span><br><span class="line">    overflow: hidden;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p>打开在阿里<code>icon</code>的项目，复制你想要的图标代码</p><p><img src="12.png" alt=""></p><p>使用方式，代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;SvgIcon class=&quot;icon&quot; icon-class=&quot;vue-ele-icon-search&quot;/&gt;</span><br></pre></td></tr></table></figure><p>````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````</p><p>参考文章：<a href="https://www.jianshu.com/p/59dd28f0b9c9" target="_blank" rel="noopener">Vue Element使用icon图标(第三方)</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;具体步骤如下&quot;&gt;&lt;a href=&quot;#具体步骤如下&quot; class=&quot;headerlink&quot; title=&quot;具体步骤如下&quot;&gt;&lt;/a&gt;具体步骤如下&lt;/h2&gt;&lt;p&gt;打开&lt;a href=&quot;https://www.iconfont.cn/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;阿里icon&lt;/a&gt;，注册 &amp;gt;登录&amp;gt;图标管理&amp;gt;我的项目&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;01.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;新建项目&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;02.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;填写项目名称和前缀（前缀不能为：&lt;code&gt;el-icon&lt;/code&gt;），点新建&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;03.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;返回首页，点进去你想要的&lt;code&gt;icon&lt;/code&gt;库，将想要的图标添加入库&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;04.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;若需要批量添加图标，可在控制台输入如下代码&lt;/p&gt;
    
    </summary>
    
    
      <category term="Vue" scheme="http://yoursite.com/categories/Vue/"/>
    
      <category term="ElementUI" scheme="http://yoursite.com/categories/Vue/ElementUI/"/>
    
    
      <category term="Vue" scheme="http://yoursite.com/tags/Vue/"/>
    
      <category term="ElementUI" scheme="http://yoursite.com/tags/ElementUI/"/>
    
  </entry>
  
  <entry>
    <title>MAC升级Nodejs和Npm到最新版</title>
    <link href="http://yoursite.com/2019/11/18/MAC%E5%8D%87%E7%BA%A7Nodejs%E5%92%8CNpm%E5%88%B0%E6%9C%80%E6%96%B0%E7%89%88/"/>
    <id>http://yoursite.com/2019/11/18/MAC%E5%8D%87%E7%BA%A7Nodejs%E5%92%8CNpm%E5%88%B0%E6%9C%80%E6%96%B0%E7%89%88/</id>
    <published>2019-11-18T03:10:39.000Z</published>
    <updated>2019-12-23T03:20:58.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="具体步骤如下"><a href="#具体步骤如下" class="headerlink" title="具体步骤如下"></a>具体步骤如下</h2><p>查看本机node.js版本：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">node -v</span><br></pre></td></tr></table></figure><p>清除node.js的cache：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo npm cache clean -f</span><br></pre></td></tr></table></figure><p>安装 n 工具，这个工具是专门用来管理node.js版本的，别怀疑这个工具的名字，是他是他就是他，他的名字就是 “n”</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo npm install -g n</span><br></pre></td></tr></table></figure><p>安装最新版本的node.js</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo n stable</span><br></pre></td></tr></table></figure> <a id="more"></a> <p>再次查看本机的node.js版本：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">node -v</span><br></pre></td></tr></table></figure><p>更新npm到最新版：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo npm install npm@latest -g</span><br></pre></td></tr></table></figure><p>验证</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">node -v npm -v</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;具体步骤如下&quot;&gt;&lt;a href=&quot;#具体步骤如下&quot; class=&quot;headerlink&quot; title=&quot;具体步骤如下&quot;&gt;&lt;/a&gt;具体步骤如下&lt;/h2&gt;&lt;p&gt;查看本机node.js版本：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;node -v&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;清除node.js的cache：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo npm cache clean -f&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;安装 n 工具，这个工具是专门用来管理node.js版本的，别怀疑这个工具的名字，是他是他就是他，他的名字就是 “n”&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo npm install -g n&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;安装最新版本的node.js&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo n stable&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="Nodejs" scheme="http://yoursite.com/categories/Nodejs/"/>
    
      <category term="Npm包管理" scheme="http://yoursite.com/categories/Nodejs/Npm%E5%8C%85%E7%AE%A1%E7%90%86/"/>
    
    
      <category term="Nodejs" scheme="http://yoursite.com/tags/Nodejs/"/>
    
      <category term="Npm包管理" scheme="http://yoursite.com/tags/Npm%E5%8C%85%E7%AE%A1%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>JS解析机制--深入理解变量提升</title>
    <link href="http://yoursite.com/2019/11/18/JS%E8%A7%A3%E6%9E%90%E6%9C%BA%E5%88%B6--%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%E5%8F%98%E9%87%8F%E6%8F%90%E5%8D%87/"/>
    <id>http://yoursite.com/2019/11/18/JS%E8%A7%A3%E6%9E%90%E6%9C%BA%E5%88%B6--%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%E5%8F%98%E9%87%8F%E6%8F%90%E5%8D%87/</id>
    <published>2019-11-18T03:00:20.000Z</published>
    <updated>2019-12-23T03:05:10.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="预解析概念"><a href="#预解析概念" class="headerlink" title="预解析概念"></a>预解析概念</h2><p>在当前作用域下,js运行之前，会把带有var和function关键字的事先声明，并在内存中安排好。（这个过程也可以理解为变量提升）然后再从上到下执行js语句。预解析只会发生在通过var定义的变量和function上。</p><h2 id="var声明的变量"><a href="#var声明的变量" class="headerlink" title="var声明的变量"></a>var声明的变量</h2><p>使用var声明的变量预解析：告诉解析器知道有这个名字的存在并默认将该变量赋值undefined ，如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">console.log(x);  //undefined</span><br><span class="line">var x = 5;</span><br></pre></td></tr></table></figure><p>变量x虽然是在console.log后面定义的，但是使用var申明的x会提前保存在内存中，并赋值undefined ，然后再从上往下执行js语句 。它的执行顺序类似于下面的结构：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var x；</span><br><span class="line">console.log(x);  //undefined</span><br><span class="line">x = 5;</span><br></pre></td></tr></table></figure> <a id="more"></a> <p>先声明了x ,x没有定义赋值为undefined ，输出的结果自然为undefined 。然后再给x赋值为5。</p><p>需要注意的是，如果变量声明没有使用var ,不存在变量提升的。如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">console.log(x);  //error: x is not defined</span><br><span class="line">x = 5;</span><br></pre></td></tr></table></figure><p>x没有使用var声明，所以报错找不到x。</p><h2 id="functin声明的函数"><a href="#functin声明的函数" class="headerlink" title="functin声明的函数"></a>functin声明的函数</h2><p>使用function声明函数的预解析：先告诉解析器这个函数名的存在，然后在告诉解析器这个函数名的函数体是什么 。如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">console.log(f); </span><br><span class="line">function f() &#123;</span><br><span class="line">    console.log(&quot;xx&quot;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>声明函数会把整个函数都提升到最前面 ，所以浏览器中结果会输出整个函数，结果如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">function f() &#123;</span><br><span class="line">    console.log(&quot;xx&quot;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果在一个函数作用域中声明一个变量 ，那么它也会提升到函数作用域的最上面，如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">var x = 5;</span><br><span class="line">function f() &#123;</span><br><span class="line">    console.log(x);   //undefined</span><br><span class="line">    var x = 2;</span><br><span class="line">&#125;</span><br><span class="line">f();</span><br></pre></td></tr></table></figure><p>以上虽然全局作用域声明了一个变量x ,但是函数里面也声明了一个变量x ,所以会先查找函数里面是否有变量x，如果有的话就不会再全局下查找了。函数里面的变量x会被提升到函数作用域的最前面 ，并且赋值为undefined，所以输出结果为undefined ，类似于如下结构：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">var x = 5;</span><br><span class="line">function f() &#123;</span><br><span class="line">    var x;</span><br><span class="line">    console.log(x);   //undefined</span><br><span class="line">    x = 2;</span><br><span class="line">&#125;</span><br><span class="line">f();</span><br></pre></td></tr></table></figure><p>函数的参数也可以理解为函数作用域的变量 ，如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">var x = 5;</span><br><span class="line">function f(x) &#123;</span><br><span class="line">    console.log(x);   //undefined</span><br><span class="line">&#125;</span><br><span class="line">f();</span><br><span class="line">console.log(x);   //5</span><br></pre></td></tr></table></figure><p>为函数f传递一个形参x ,由于函数在调用时没有传递实参 （也就是说变量x没有赋值） ，所以为undefined 。而在全局下输出x自然在全局下查找变量x ，结果为5。</p><h2 id="变量或函数覆盖"><a href="#变量或函数覆盖" class="headerlink" title="变量或函数覆盖"></a>变量或函数覆盖</h2><p>如果在同一个作用域下声明两个相同的变量或者函数，那么后一个会覆盖前一个。如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var x = 5;</span><br><span class="line">var x = 10;</span><br><span class="line">console.log(x);   //10</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">function f() &#123;</span><br><span class="line">    console.log(&quot;xx&quot;);</span><br><span class="line">&#125;</span><br><span class="line">function f() &#123;</span><br><span class="line">    console.log(&quot;yy&quot;);</span><br><span class="line">&#125;</span><br><span class="line">f();   //yy</span><br></pre></td></tr></table></figure><p>如果声明的函数与变量名字相同 ，那又会怎么覆盖呢？可以看如下例子：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">var f = 5;</span><br><span class="line">function f() &#123;</span><br><span class="line">    console.log(&quot;xx&quot;);</span><br><span class="line">&#125;</span><br><span class="line">f();   //error: f is not a function</span><br></pre></td></tr></table></figure><p>JavaScript中 ，函数的预解析优先级是要高于变量的预解析的。无论函数在什么位置声明 ，都优选把整个函数提升到最前面。所以上面的例子中 ，虽然函数f是在变量f下面定义的 ，但是在预解析时先解析函数f ,然后再解析变量f ,后面的变量f会把前面的函数f覆盖，最后f为5 为数值类型 ，所以调用f时报错 ，f不是一个函数。</p><p>需要注意的是 ，如果变量m定义后没有赋值 ，那么函数就不会被覆盖了，如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">var f;</span><br><span class="line">function f() &#123;</span><br><span class="line">    console.log(&quot;xx&quot;);</span><br><span class="line">&#125;</span><br><span class="line">f();   //xx</span><br></pre></td></tr></table></figure><p>掌握以上知识，我们看下面的例子 ：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">console.log(x);   //function x() &#123;console.log(5);&#125;</span><br><span class="line">var x = 2;</span><br><span class="line">console.log(x);   //2</span><br><span class="line">function x() &#123;</span><br><span class="line">    console.log(3);</span><br><span class="line">&#125;</span><br><span class="line">console.log(x);   //2</span><br><span class="line">var x = 3;</span><br><span class="line">console.log(x);   //3</span><br><span class="line">function x() &#123;</span><br><span class="line">    console.log(5);</span><br><span class="line">&#125;</span><br><span class="line">console.log(x);   //3</span><br><span class="line">x();   error: x is not a function</span><br></pre></td></tr></table></figure><p>以上例子，两个函数x优先提升 ，所以第二个函数x覆盖第一个函数x。然后两个变量x提升，由于变量x提升后为undefined，所以第二个函数没有被覆盖 ，第一个输出x结果为第二个函数function x(){console.log(5);}。随后x被赋值为2 ，所以第二个输出x结果为2。因为第一个函数x已经被提升到前面去了，所以第三个输出x结果还是2。随后为x赋值为3，所以第四，第五输出x结果为3。最后调用x,x因为是数值类型，所以会报错x不是一个函数。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;预解析概念&quot;&gt;&lt;a href=&quot;#预解析概念&quot; class=&quot;headerlink&quot; title=&quot;预解析概念&quot;&gt;&lt;/a&gt;预解析概念&lt;/h2&gt;&lt;p&gt;在当前作用域下,js运行之前，会把带有var和function关键字的事先声明，并在内存中安排好。（这个过程也可以理解为变量提升）然后再从上到下执行js语句。预解析只会发生在通过var定义的变量和function上。&lt;/p&gt;
&lt;h2 id=&quot;var声明的变量&quot;&gt;&lt;a href=&quot;#var声明的变量&quot; class=&quot;headerlink&quot; title=&quot;var声明的变量&quot;&gt;&lt;/a&gt;var声明的变量&lt;/h2&gt;&lt;p&gt;使用var声明的变量预解析：告诉解析器知道有这个名字的存在并默认将该变量赋值undefined ，如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;console.log(x);  //undefined&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;var x = 5;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;变量x虽然是在console.log后面定义的，但是使用var申明的x会提前保存在内存中，并赋值undefined ，然后再从上往下执行js语句 。它的执行顺序类似于下面的结构：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;var x；&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;console.log(x);  //undefined&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;x = 5;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="JavaScript" scheme="http://yoursite.com/categories/JavaScript/"/>
    
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>Hexo-NexT配置超炫网页效果</title>
    <link href="http://yoursite.com/2019/11/16/Hexo-NexT%E9%85%8D%E7%BD%AE%E8%B6%85%E7%82%AB%E7%BD%91%E9%A1%B5%E6%95%88%E6%9E%9C/"/>
    <id>http://yoursite.com/2019/11/16/Hexo-NexT%E9%85%8D%E7%BD%AE%E8%B6%85%E7%82%AB%E7%BD%91%E9%A1%B5%E6%95%88%E6%9E%9C/</id>
    <published>2019-11-16T13:12:32.000Z</published>
    <updated>2019-12-23T07:29:08.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="添加添加RSS"><a href="#添加添加RSS" class="headerlink" title="添加添加RSS"></a>添加添加RSS</h2><p>在博客根目录下，打开命令窗口，并安装Hexo插件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-generator-feed</span><br></pre></td></tr></table></figure><p>安装成功之后，编辑<code>Blog/_config.yml</code>文件，在文件末尾添加</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Extensions</span></span><br><span class="line"><span class="comment">## Plugins: http://hexo.io/plugins/</span></span><br><span class="line">plugins: hexo-generate-feed</span><br></pre></td></tr></table></figure><p>配置主题<code>_config.yml</code>文件，搜索<code>rss</code>，在后面加上<code>/atom.xml</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Set rss to false to disable feed link.</span></span><br><span class="line"><span class="comment"># Leave rss as empty to use site's feed link.</span></span><br><span class="line"><span class="comment"># Set rss to specific value if you have burned your feed already.</span></span><br><span class="line">rss: /atom.xml <span class="comment">//注意：有一个空格</span></span><br></pre></td></tr></table></figure><p>之后，终端输入<code>hexo s</code>查看效果</p><a id="more"></a> <p><img src="01.png" alt=""></p><h2 id="右上角添加GitHub挂件"><a href="#右上角添加GitHub挂件" class="headerlink" title="右上角添加GitHub挂件"></a>右上角添加GitHub挂件</h2><p>在<a href="http://tholman.com/github-corners/" target="_blank" rel="noopener">GitHub Corners</a>选择一款你喜欢的挂饰，拷贝方框内的代码</p><p><img src="02.png" alt=""></p><p>在目录中找到<code>Blog/themes/next/layout/_layout.swig</code>文件并打开，将刚刚复制的挂饰代码添加在<code>&lt;div class=&quot;headband&quot;&gt;&lt;/div&gt;</code>中</p><p><img src="03.png" alt=""></p><p>找到刚复制进去代码的<code>&lt;a&gt;&lt;/a&gt;</code>标签，将跳转地址改成自己的<code>GitHub</code>地址</p><h2 id="修改底部标签样式"><a href="#修改底部标签样式" class="headerlink" title="修改底部标签样式"></a>修改底部标签样式</h2><p>修改<code>Blog\themes\next\layout\_macro\post.swig</code>中文件，<code>command+f</code>搜索<code>rel=&quot;tag&quot;&gt;#</code>，将<code>#</code>替换成<code>&lt;i class=&quot;fa fa-tag&quot;&gt;&lt;/i&gt;</code></p><p>输入以下命令，查看效果</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><p><img src="04.png" alt=""></p><h2 id="在文章末尾添加“文章结束”标记"><a href="#在文章末尾添加“文章结束”标记" class="headerlink" title="在文章末尾添加“文章结束”标记"></a>在文章末尾添加“文章结束”标记</h2><p>在路径<code>Blog\themes\next\layout\_macro</code>文件夹中新建<code>passage-end-tag.swig</code>文件</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//切换到路径_macro</span></span><br><span class="line">cd [_<span class="keyword">macro</span>路径]</span><br><span class="line"></span><br><span class="line"><span class="comment">//创建passage-end-tag.swig文件</span></span><br><span class="line">touch passage-end-tag.swig</span><br></pre></td></tr></table></figure><p>在passage-end-tag.swig添加以下内容，直接用文本编辑器打开，粘贴以下内容后保存</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    &#123;% if not is_index %&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"text-align:center;color: #ccc;font-size:14px;"</span>&gt;</span>-------------本文结束<span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-paw"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span>感谢您的阅读-------------<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    &#123;% endif %&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>打开<code>Blog\themes\next\layout\_macro\post.swig</code>，在<code>post-body</code>之后，<code>post-footer</code>之前（<strong>post-footer之前两个DIV</strong>），添加以下代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;div&gt;</span><br><span class="line">  &#123;% <span class="keyword">if</span> not is_index %&#125;</span><br><span class="line">    &#123;% <span class="keyword">include</span> <span class="string">'passage-end-tag.swig'</span> %&#125;</span><br><span class="line">  &#123;% <span class="keyword">endif</span> %&#125;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>位置如下：</p><p><img src="05.png" alt=""></p><p>修改主题配置文件<strong>_config.yml</strong>，在末尾添加：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 文章末尾添加“本文结束”标记</span></span><br><span class="line">passage_end_tag:</span><br><span class="line">  enabled: <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>配置完成之后，效果如下：</p><p><img src="06.png" alt=""></p><h2 id="侧边栏社交小图标设置"><a href="#侧边栏社交小图标设置" class="headerlink" title="侧边栏社交小图标设置"></a>侧边栏社交小图标设置</h2><p>打开主题配置文件<code>_config.yml</code>，搜索<code>Social</code>，将你有的社交账号前面的<code>#</code>号去掉。格式为：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="meta">社交平台名</span>]: [社交地址] || [图标名称]</span><br></pre></td></tr></table></figure><p><img src="07.png" alt=""></p><p>效果图如下：</p><p><img src="08.png" alt=""></p><p>图标可以去<a href="https://fontawesome.com/icons?from=io" target="_blank" rel="noopener">Font Awesome Icon</a>网站去找，找到后复制名字到相应的位置即可</p><h2 id="Hexo博客添加站内搜索（Local-Search）"><a href="#Hexo博客添加站内搜索（Local-Search）" class="headerlink" title="Hexo博客添加站内搜索（Local Search）"></a>Hexo博客添加站内搜索（Local Search）</h2><p>安装 hexo-generator-search</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-search --save</span><br></pre></td></tr></table></figure><p>安装 hexo-generator-searchdb</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure><p>编辑站点配置文件，添加以下内容</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">search:</span><br><span class="line">  path: search.xml</span><br><span class="line">  field: post</span><br><span class="line">  format: html</span><br><span class="line">  <span class="built_in">limit</span>: 10000</span><br></pre></td></tr></table></figure><p>编辑主题配置文件，设置<code>Local search</code>enable为<code>ture</code></p><p><img src="09.png" alt=""></p><p>效果如下图所示：</p><p><img src="10.png" alt=""></p><h2 id="添加网页顶部进度加载条"><a href="#添加网页顶部进度加载条" class="headerlink" title="添加网页顶部进度加载条"></a>添加网页顶部进度加载条</h2><p>编辑主题配置文件，搜索<code>pace</code>，将其值改为<code>ture</code>就可以了，选择一款你喜欢的样式，如图：</p><p><img src="11.png" alt=""></p><h2 id="修改文章内链接文本样式"><a href="#修改文章内链接文本样式" class="headerlink" title="修改文章内链接文本样式"></a>修改文章内链接文本样式</h2><p>修改<code>Blog/themes/next/source/css/_common/components/post/post.styl</code>，在末尾添加CSS样式：</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 文章内链接文本样式</span></span><br><span class="line">.post-body p a&#123;</span><br><span class="line">  color: #0593d3; <span class="comment">//原始链接颜色</span></span><br><span class="line">  border-bottom: <span class="keyword">none</span>;</span><br><span class="line">  border-bottom: 1px solid #0593d3; <span class="comment">//底部分割线颜色</span></span><br><span class="line">  &amp;:hover &#123;</span><br><span class="line">    color: #fc6423; <span class="comment">//鼠标经过颜色</span></span><br><span class="line">    border-bottom: <span class="keyword">none</span>;</span><br><span class="line">    border-bottom: 1px solid #fc6423; <span class="comment">//底部分割线颜色</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>设置后，效果如下：</p><p><img src="12.png" alt=""></p><h2 id="设置网站的图标Favicon"><a href="#设置网站的图标Favicon" class="headerlink" title="设置网站的图标Favicon"></a>设置网站的图标Favicon</h2><p>在图标网站（<a href="https://www.easyicon.net/" target="_blank" rel="noopener">easyicon</a>或者<a href="https://www.iconfont.cn/" target="_blank" rel="noopener">阿里巴巴矢量图标库</a>）找一张你喜欢的图标（大：32x32 小：16x16）并下载下来，将下载好的小图和中图命名成默认图标的名字，并放在<code>Blog/themes/next/source/images</code>中替换掉。</p><p>如果你自定义了图片名字，需要修改主题配置文件，如下图：</p><p><img src="13.png" alt=""></p><h2 id="底部隐藏由Hexo强力驱动、主题"><a href="#底部隐藏由Hexo强力驱动、主题" class="headerlink" title="底部隐藏由Hexo强力驱动、主题"></a>底部隐藏由Hexo强力驱动、主题</h2><p>打开主题配置文件<code>_config.yml</code>，搜索<code>footer</code>，将相关配置设置为<code>false</code>，如下图：</p><p><img src="14.png" alt=""></p><h2 id="添加侧栏推荐阅读"><a href="#添加侧栏推荐阅读" class="headerlink" title="添加侧栏推荐阅读"></a>添加侧栏推荐阅读</h2><p>编辑主题配置文件，如下配置即可：</p><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># Blog rolls</span></span><br><span class="line">links_icon: link</span><br><span class="line">links_title: 推荐阅读</span><br><span class="line"><span class="meta">#links_layout: block</span></span><br><span class="line">links_layout: <span class="keyword">inline</span></span><br><span class="line">links:</span><br><span class="line"> ECMAScript6入门: http:<span class="comment">//es6.ruanyifeng.com/</span></span><br></pre></td></tr></table></figure><p>效果如下图所示：</p><p><img src="15.png" alt=""></p><h2 id="网站底部加上访问量"><a href="#网站底部加上访问量" class="headerlink" title="网站底部加上访问量"></a>网站底部加上访问量</h2><p>打开主题配置文件<code>_config.yml</code>，搜索<code>footer</code>，加入一个配置counter，并设置为<code>true</code>,如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">footer:</span><br><span class="line">  counter: true</span><br></pre></td></tr></table></figure><p>修改``Blog/theme/next/layout/_partials/footer.swig`，在末尾添加如下代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;% if theme.footer.counter %&#125;</span><br><span class="line">    &lt;script async src=&quot;//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">    &lt;i class=&quot;fa fa-user-md&quot;&gt;&lt;/i&gt; &lt;span id=&quot;busuanzi_container_site_pv&quot;&gt;总访问量&lt;span id=&quot;busuanzi_value_site_pv&quot;&gt;&lt;/span&gt;次&lt;/span&gt;</span><br><span class="line">    &lt;span class=&quot;post-meta-divider&quot;&gt;|&lt;/span&gt;</span><br><span class="line">    &lt;span id=&quot;busuanzi_container_site_uv&quot;&gt;总访客&lt;span id=&quot;busuanzi_value_site_uv&quot;&gt;&lt;/span&gt;人&lt;/span&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><p>效果如下图：</p><p><img src="16.png" alt=""></p><p>````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````</p><p>参考文章：<a href="https://www.jianshu.com/p/9f0e90cc32c2" target="_blank" rel="noopener">Hexo-NexT配置超炫网页效果</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;添加添加RSS&quot;&gt;&lt;a href=&quot;#添加添加RSS&quot; class=&quot;headerlink&quot; title=&quot;添加添加RSS&quot;&gt;&lt;/a&gt;添加添加RSS&lt;/h2&gt;&lt;p&gt;在博客根目录下，打开命令窗口，并安装Hexo插件&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm install --save hexo-generator-feed&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;安装成功之后，编辑&lt;code&gt;Blog/_config.yml&lt;/code&gt;文件，在文件末尾添加&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Extensions&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;## Plugins: http://hexo.io/plugins/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;plugins: hexo-generate-feed&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;配置主题&lt;code&gt;_config.yml&lt;/code&gt;文件，搜索&lt;code&gt;rss&lt;/code&gt;，在后面加上&lt;code&gt;/atom.xml&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Set rss to false to disable feed link.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Leave rss as empty to use site&#39;s feed link.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Set rss to specific value if you have burned your feed already.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rss: /atom.xml &lt;span class=&quot;comment&quot;&gt;//注意：有一个空格&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;之后，终端输入&lt;code&gt;hexo s&lt;/code&gt;查看效果&lt;/p&gt;
    
    </summary>
    
    
      <category term="博客搭建" scheme="http://yoursite.com/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    
      <category term="博客搭建" scheme="http://yoursite.com/tags/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
  </entry>
  
  <entry>
    <title>GitHub Pages博客绑定域名</title>
    <link href="http://yoursite.com/2019/11/16/Hexo%E5%8D%9A%E5%AE%A2%E7%BB%91%E5%AE%9A%E5%9F%9F%E5%90%8D/"/>
    <id>http://yoursite.com/2019/11/16/Hexo%E5%8D%9A%E5%AE%A2%E7%BB%91%E5%AE%9A%E5%9F%9F%E5%90%8D/</id>
    <published>2019-11-16T08:08:22.000Z</published>
    <updated>2019-12-21T03:49:28.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="域名准备"><a href="#域名准备" class="headerlink" title="域名准备"></a>域名准备</h2><p>在腾讯云（或者阿里云）购买域名，并且实名认证</p><h2 id="创建-CNAME"><a href="#创建-CNAME" class="headerlink" title="创建 CNAME"></a>创建 CNAME</h2><h3 id="在博客目录中创建（推荐）"><a href="#在博客目录中创建（推荐）" class="headerlink" title="在博客目录中创建（推荐）"></a>在博客目录中创建（推荐）</h3><p>在博客目录中source文件夹中，直接新建txt文件,内容写你的域名，不要加上 http、https、www</p><p>将txt文件命名为CNAME（必须大写），并且去掉后缀名（不需要后缀名）</p><p>然后使用命令<code>hexo g</code>重新生成，<code>hexo d</code>部署到Github，在GitHub项目库中看到CNAME文件，则成功</p><h3 id="在GitHub项目库中直接创建（不推荐，每次部署都会被覆盖）"><a href="#在GitHub项目库中直接创建（不推荐，每次部署都会被覆盖）" class="headerlink" title="在GitHub项目库中直接创建（不推荐，每次部署都会被覆盖）"></a>在GitHub项目库中直接创建（不推荐，每次部署都会被覆盖）</h3><p>在项目库中点击<code>Create new file</code>按钮，新建文件，命名为CNAME（必须大写），内容写你的域名，不要加上 http、https、www</p> <a id="more"></a> <h2 id="添加-DNS-解析"><a href="#添加-DNS-解析" class="headerlink" title="添加 DNS 解析"></a>添加 DNS 解析</h2><p>在腾讯云域名控制面板中，点击解析-&gt;添加记录，配置如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">主机记录   记录类型   记录值</span><br><span class="line">   @         A       185.199.109.153</span><br><span class="line">   @          A       185.199.110.153</span><br><span class="line">  www       CNAME     username.github.io</span><br></pre></td></tr></table></figure><p>A 记录的 ip 地址可以在下面中选择</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">185.199.108.153</span><br><span class="line">185.199.109.153</span><br><span class="line">185.199.110.153</span><br><span class="line">185.199.111.153</span><br></pre></td></tr></table></figure><h2 id="修改GitHub-Pages设置"><a href="#修改GitHub-Pages设置" class="headerlink" title="修改GitHub Pages设置"></a>修改GitHub Pages设置</h2><p>完成后进入库的设置，找到 GitHub Pages ，如果能看到类似  <strong>Your site is published at <a href="https://Your" target="_blank" rel="noopener">https://Your</a> 域名</strong> ，说明就搞定了</p><p>勾选Enforce HTTPS，GitHub 提供的这个可以直接让你的网站从 HTTP 升级到 HTTPS</p><p>等待几分钟，直接访问你的域名，检查是否绑定成功</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;域名准备&quot;&gt;&lt;a href=&quot;#域名准备&quot; class=&quot;headerlink&quot; title=&quot;域名准备&quot;&gt;&lt;/a&gt;域名准备&lt;/h2&gt;&lt;p&gt;在腾讯云（或者阿里云）购买域名，并且实名认证&lt;/p&gt;
&lt;h2 id=&quot;创建-CNAME&quot;&gt;&lt;a href=&quot;#创建-CNAME&quot; class=&quot;headerlink&quot; title=&quot;创建 CNAME&quot;&gt;&lt;/a&gt;创建 CNAME&lt;/h2&gt;&lt;h3 id=&quot;在博客目录中创建（推荐）&quot;&gt;&lt;a href=&quot;#在博客目录中创建（推荐）&quot; class=&quot;headerlink&quot; title=&quot;在博客目录中创建（推荐）&quot;&gt;&lt;/a&gt;在博客目录中创建（推荐）&lt;/h3&gt;&lt;p&gt;在博客目录中source文件夹中，直接新建txt文件,内容写你的域名，不要加上 http、https、www&lt;/p&gt;
&lt;p&gt;将txt文件命名为CNAME（必须大写），并且去掉后缀名（不需要后缀名）&lt;/p&gt;
&lt;p&gt;然后使用命令&lt;code&gt;hexo g&lt;/code&gt;重新生成，&lt;code&gt;hexo d&lt;/code&gt;部署到Github，在GitHub项目库中看到CNAME文件，则成功&lt;/p&gt;
&lt;h3 id=&quot;在GitHub项目库中直接创建（不推荐，每次部署都会被覆盖）&quot;&gt;&lt;a href=&quot;#在GitHub项目库中直接创建（不推荐，每次部署都会被覆盖）&quot; class=&quot;headerlink&quot; title=&quot;在GitHub项目库中直接创建（不推荐，每次部署都会被覆盖）&quot;&gt;&lt;/a&gt;在GitHub项目库中直接创建（不推荐，每次部署都会被覆盖）&lt;/h3&gt;&lt;p&gt;在项目库中点击&lt;code&gt;Create new file&lt;/code&gt;按钮，新建文件，命名为CNAME（必须大写），内容写你的域名，不要加上 http、https、www&lt;/p&gt;
    
    </summary>
    
    
      <category term="博客搭建" scheme="http://yoursite.com/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    
      <category term="博客搭建" scheme="http://yoursite.com/tags/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
  </entry>
  
  <entry>
    <title>Hexo博客使用LeanCloud统计文章阅读量</title>
    <link href="http://yoursite.com/2019/11/15/Hexo%E5%8D%9A%E5%AE%A2%E4%BD%BF%E7%94%A8LeanCloud%E7%BB%9F%E8%AE%A1%E6%96%87%E7%AB%A0%E9%98%85%E8%AF%BB%E9%87%8F/"/>
    <id>http://yoursite.com/2019/11/15/Hexo%E5%8D%9A%E5%AE%A2%E4%BD%BF%E7%94%A8LeanCloud%E7%BB%9F%E8%AE%A1%E6%96%87%E7%AB%A0%E9%98%85%E8%AF%BB%E9%87%8F/</id>
    <published>2019-11-15T12:08:03.000Z</published>
    <updated>2019-12-21T03:50:54.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="配置-LeanCloud"><a href="#配置-LeanCloud" class="headerlink" title="配置 LeanCloud"></a>配置 LeanCloud</h2><h3 id="创建账号"><a href="#创建账号" class="headerlink" title="创建账号"></a>创建账号</h3><p>进入官网 <code>https://leancloud.cn/</code>，进入右侧控制台并注册账号、验证邮箱</p><h3 id="创建应用"><a href="#创建应用" class="headerlink" title="创建应用"></a>创建应用</h3><p>控制台 -&gt; 创建应用（开发版），应用名称可以随意输入，后面还可以修改，如图：</p><p><img src="01.png" alt=""></p><p><img src="02.png" alt=""></p><h3 id="创建-Class"><a href="#创建-Class" class="headerlink" title="创建 Class"></a>创建 Class</h3><p>点击刚创建的 website 应用，点击存储，创建一个 Class 表用来保存博客访问数据</p><ul><li>此处创建的 Class 名字必须为 <code>Counter</code>，用来保证与 NexT 主题的修改相兼容</li><li>ACL 权限选择 <code>read所有用户</code>，避免后续因为权限的问题导致次数统计显示不正常</li></ul><a id="more"></a> <p><img src="03.png" alt=""></p><p><img src="04.png" alt=""></p><h3 id="设置网络安全"><a href="#设置网络安全" class="headerlink" title="设置网络安全"></a>设置网络安全</h3><p>由于app-id和app-key是完全暴露的，所以防止他人使用，我们可以在应用设置里面面设置Web安全域名，只有添加的域名才能使用该应用，防止有人Hack我们的数据库。点击设置-&gt;安全中心-&gt;Web域名安全-&gt;添加Blog域名-&gt;点击保存</p><p><img src="05.png" alt=""></p><h2 id="配置博客"><a href="#配置博客" class="headerlink" title="配置博客"></a>配置博客</h2><p>在LeanCloud中点击设置-&gt;应用Keys-&gt;复制App-ID和App-Key</p><p><img src="06.png" alt=""></p><p>打开 NexT 主题的 <code>_config.yml</code> 文件，把刚才复制的 App-ID 和 App-Key 和填入下面相应位置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">leancloud_visitors:</span><br><span class="line">  enable: true</span><br><span class="line">  app_id: # 你的app-id</span><br><span class="line">  app_key: # 你的app-key</span><br></pre></td></tr></table></figure><p>然后使用命令<code>hexo g</code>重新生成，<code>hexo d</code>部署到Github</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;配置-LeanCloud&quot;&gt;&lt;a href=&quot;#配置-LeanCloud&quot; class=&quot;headerlink&quot; title=&quot;配置 LeanCloud&quot;&gt;&lt;/a&gt;配置 LeanCloud&lt;/h2&gt;&lt;h3 id=&quot;创建账号&quot;&gt;&lt;a href=&quot;#创建账号&quot; class=&quot;headerlink&quot; title=&quot;创建账号&quot;&gt;&lt;/a&gt;创建账号&lt;/h3&gt;&lt;p&gt;进入官网 &lt;code&gt;https://leancloud.cn/&lt;/code&gt;，进入右侧控制台并注册账号、验证邮箱&lt;/p&gt;
&lt;h3 id=&quot;创建应用&quot;&gt;&lt;a href=&quot;#创建应用&quot; class=&quot;headerlink&quot; title=&quot;创建应用&quot;&gt;&lt;/a&gt;创建应用&lt;/h3&gt;&lt;p&gt;控制台 -&amp;gt; 创建应用（开发版），应用名称可以随意输入，后面还可以修改，如图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;01.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;02.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;创建-Class&quot;&gt;&lt;a href=&quot;#创建-Class&quot; class=&quot;headerlink&quot; title=&quot;创建 Class&quot;&gt;&lt;/a&gt;创建 Class&lt;/h3&gt;&lt;p&gt;点击刚创建的 website 应用，点击存储，创建一个 Class 表用来保存博客访问数据&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;此处创建的 Class 名字必须为 &lt;code&gt;Counter&lt;/code&gt;，用来保证与 NexT 主题的修改相兼容&lt;/li&gt;
&lt;li&gt;ACL 权限选择 &lt;code&gt;read所有用户&lt;/code&gt;，避免后续因为权限的问题导致次数统计显示不正常&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="博客搭建" scheme="http://yoursite.com/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    
      <category term="博客搭建" scheme="http://yoursite.com/tags/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
  </entry>
  
</feed>
